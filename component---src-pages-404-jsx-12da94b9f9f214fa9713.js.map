{"version":3,"file":"component---src-pages-404-jsx-12da94b9f9f214fa9713.js","mappings":"yMAYA,SAASA,EAAT,GAEI,IAAD,IADDC,EACC,EADDA,YAAaC,EACZ,EADYA,KAAMC,EAClB,EADkBA,KAAMC,EACxB,EADwBA,MAEjBC,GAASC,EAAAA,EAAAA,gBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACE,gBAAC,IAAD,CACEM,eAAgB,CACdR,KAAAA,GAEFE,MAAOA,EACPO,cAAeF,EAAY,QAAWA,EAAiB,KACvDN,KAAM,CACJ,CACES,KAAM,cACNC,QAASN,GAEX,CACEO,SAAU,WACVD,QAAST,GAEX,CACEU,SAAU,iBACVD,QAASN,GAEX,CACEO,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,SAAS,UAAAR,EAAKG,oBAAL,eAAmBO,SAAU,IAExC,CACEH,KAAM,gBACNC,QAAST,GAEX,CACEQ,KAAM,sBACNC,QAASN,IAEXS,OAAOb,KAKfH,EAAIiB,aAAe,CACjBf,KAAM,KACNC,KAAM,GACNF,YAAa,IAUf,O,kEC7EA,UARqB,kBACnB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKG,MAAM,mBACX,4CACA","sources":["webpack://paragon-pattern-library-documentation/./src/components/SEO.jsx","webpack://paragon-pattern-library-documentation/./src/pages/404.jsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata?.author || '',\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import * as React from 'react';\n\nimport Layout from '../components/PageLayout';\nimport SEO from '../components/SEO';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"sourceRoot":""}