{"version":3,"file":"component---src-pages-guides-installation-and-usage-mdx-01de8cc946a713e69ab0.js","mappings":"oTAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,2BACL,cAAGC,WAAW,KACb,KAAQ,4BACP,iBAAMA,WAAW,IAChB,UAAa,uBALnB,2BAOA,2GACA,mCACA,qBAAK,iBAAMA,WAAW,OAAjB,iCAEL,6CACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,qDAIL,eACE,GAAM,oBACL,cAAGA,WAAW,KACb,KAAQ,qBACP,iBAAMA,WAAW,IAChB,UAAa,uBALnB,oBAOA,2CACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,mDAIL,0CACA,kOAAmN,uBAAYA,WAAW,KAAvB,YAAnN,gFAAuV,cAAGA,WAAW,IACjW,KAAQ,gEAD2U,QAAvV,+FAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,mRASL,yIAKJJ,EAAWK,gBAAiB,G,uICxDtBC,EAAa,CACjBC,IAAK,SAAAL,GAAK,OAAI,sBAASA,IACvBM,KAAMC,EAAAA,EACNC,KAAAA,EAAAA,MAGa,SAASC,EAAT,GAAkD,IAAD,EAAzBC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAC/C,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAOD,MAAAA,GAAF,UAAEA,EAAaE,mBAAf,aAAE,EAA0BD,QACtC,gBAAC,IAAD,CAAWE,KAAK,KAAKC,UAAU,QAC7B,gBAAC,EAAAC,YAAD,CAAajB,WAAYK,GAAaM","sources":["webpack://paragon-pattern-library-documentation/./src/pages/guides/installation-and-usage.mdx","webpack://paragon-pattern-library-documentation/./src/templates/default-mdx-page-template.jsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/paragon/paragon/www/src/templates/default-mdx-page-template.jsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"installation-and-usage\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#installation-and-usage\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"heading-icon-link\"\n        }}></span></a>{`Installation and usage`}</h1>\n    <p>{`Paragon components require React 16 or higher. To install Paragon into your project:`}</p>\n    <p>{`In terminal:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm i --save @edx/paragon\n`}</code></pre>\n    <p>{`In your React project:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { ComponentName } from '@edx/paragon';\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"scss-foundation\"\n    }}><a parentName=\"h4\" {...{\n        \"href\": \"#scss-foundation\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"heading-icon-link\"\n        }}></span></a>{`SCSS Foundation`}</h4>\n    <p>{`Usage with no theme:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@import \"@edx/paragon/scss/core/core.scss\";\n`}</code></pre>\n    <p>{`Usage with a theme:`}</p>\n    <p>{`When working with a theme the order of imports is important: if you need to override Paragon's variables you must import theme's variables before Paragon core (that's because all variables in Paragon use `}<inlineCode parentName=\"p\">{`!default`}</inlineCode>{` flag which allows you to override them before importing, you can read more `}<a parentName=\"p\" {...{\n        \"href\": \"https://sass-lang.com/documentation/variables#default-values\"\n      }}>{`here`}</a>{`), while to override Paragon's styles, the theme's style overrides must be imported after.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@import \"@my-brand/fonts.scss\";\n@import \"@my-brand/variables.scss\";\n// Import the Paragon core after setting brand-themed variables.\n@import \"@edx/paragon/scss/core/core.scss\";\n// Import brand overrides after the Paragon core.\n@import \"@my-brand/overrides.scss\";\n`}</code></pre>\n    <p>{`Note that including fonts will affect load performance.  In some pages you may choose not to load the custom font.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Link } from 'gatsby';\nimport { Container } from '~paragon-react'; // eslint-disable-line\n\nimport CodeBlock from '../components/CodeBlock';\nimport Layout from '../components/PageLayout';\nimport SEO from '../components/SEO';\n\nconst shortcodes = {\n  pre: props => <div {...props} />,\n  code: CodeBlock,\n  Link,\n};\n\nexport default function PageTemplate({ children, pageContext }) {\n  return (\n    <Layout>\n      <SEO title={pageContext?.frontmatter?.title} />\n      <Container size=\"md\" className=\"py-5\">\n        <MDXProvider components={shortcodes}>{children}</MDXProvider>\n      </Container>\n    </Layout>\n  );\n}\n\nPageTemplate.propTypes = {\n  children: PropTypes.node.isRequired,\n  // Require mdx files to define their page title using frontmatter\n  pageContext: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }).isRequired,\n};\n"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","shortcodes","pre","code","CodeBlock","Link","PageTemplate","children","pageContext","title","frontmatter","size","className","MDXProvider"],"sourceRoot":""}