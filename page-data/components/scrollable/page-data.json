{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/scrollable/",
    "result": {"data":{"mdx":{"id":"c754d043-85e6-5973-8177-10bdde061761","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Scrollable\",\n  \"type\": \"component\",\n  \"components\": [\"Scrollable\"],\n  \"categories\": [\"Content\"],\n  \"status\": \"New\",\n  \"designStatus\": \"In Progress\",\n  \"devStatus\": \"In Progress\",\n  \"notes\": \"Adds overflow:auto scrolling to wrapped elements. And adds dropshadows when content wrapped within is scrolled up or down\\n\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"scrollable-area-adorned-with-top-and-bottom-drop-shadows-on-scroll-detection\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#scrollable-area-adorned-with-top-and-bottom-drop-shadows-on-scroll-detection\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Scrollable area adorned with top and bottom drop shadows on scroll detection\"), mdx(\"span\", null, \"Shadow is shown on top if you scroll upwards Shadow is shown on bottom if you scroll downwards\", mdx(\"p\", null, \"If you don't specify height you will get a default height per the Scrollable component (subject to change)\")), mdx(\"h3\", {\n    \"id\": \"basic-usage-of-scrollable-with-provided-height\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#basic-usage-of-scrollable-with-provided-height\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Basic usage of scrollable with provided height\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Scrollable style={{'height': '40vh'}}>\\n  <p>Do not use overflow in wrapped component, Scrollable provides overflow:auto around wrapped element</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n  <p>A very long scrollable Content.</p>\\n</Scrollable>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-padding-used-by-consumer\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-padding-used-by-consumer\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With padding used by consumer\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Scrollable style={{'height': '40vh'}}>\\n  <div className=\\\"p-4\\\">\\n    <p>Do not use overflow in wrapped component, Scrollable provides overflow:auto around wrapped element</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n    <p>A very long scrollable Content.</p>\\n  </div>\\n</Scrollable>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Scrollable","status":"New","notes":"Adds overflow:auto scrolling to wrapped elements. And adds dropshadows when content wrapped within is scrolled up or down\n","components":["Scrollable"]}},"components":{"nodes":[{"displayName":"Scrollable","props":[{"defaultValue":null,"name":"children","type":{"name":"node","raw":null,"value":null},"required":true,"docblock":"Specifies the content of the `Scrollable`.","doclets":[],"description":{"id":"5b4036a5-20e1-56bd-bb83-dcf066c1af8f","text":"Specifies the content of the `Scrollable`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the content of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Scrollable\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Additional classnames for this component.","doclets":[],"description":{"id":"48dd8c49-78a4-55b4-8369-d72f53e17474","text":"Additional classnames for this component.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Additional classnames for this component.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"c754d043-85e6-5973-8177-10bdde061761","components":["Scrollable"],"cssVariables":""}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}