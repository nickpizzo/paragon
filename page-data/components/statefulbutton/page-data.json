{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/statefulbutton/",
    "result": {"data":{"mdx":{"id":"2204c636-5683-5512-bbee-ac1318dde0a1","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"StatefulButton\",\n  \"type\": \"component\",\n  \"components\": [\"StatefulButton\"],\n  \"categories\": [\"Buttonlike\"],\n  \"status\": \"Stable\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The stateful button is a button used to display an actionable icon.\"), mdx(\"h3\", {\n    \"id\": \"basic-usage\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Basic usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"() => {\\n  const props = {\\n    labels: {\\n      default: 'Save',\\n      pending: 'Saving',\\n      complete: 'Saved',\\n      error: 'Error'\\n    },\\n    variant: 'primary',\\n    className: 'mr-2',\\n  };\\n  return (\\n    <div>\\n      <StatefulButton {...props} />\\n      <StatefulButton state=\\\"pending\\\" {...props} classNames='icon-spin' />\\n      <StatefulButton state=\\\"complete\\\" {...props} />\\n      <StatefulButton state=\\\"error\\\" {...props} />\\n    </div>\\n  );\\n};\\n\")), mdx(\"h3\", {\n    \"id\": \"custom-icons-and-disable-states\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#custom-icons-and-disable-states\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Custom icons and disable states\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"() => {\\n  const downloadButtonProps = {\\n    labels: {\\n      default: 'Download',\\n      pending: 'Downloading',\\n      complete: 'Downloaded',\\n      error: 'Retry'\\n    },\\n    icons: {\\n      default: <Icon className=\\\"fa fa-download\\\" />,\\n      pending: <Icon className=\\\"fa fa-spinner fa-spin\\\" />,\\n      complete: <Icon className=\\\"fa fa-check\\\" />,\\n      error: <Icon className=\\\"fa fa-retweet\\\" />,\\n    },\\n    disabledStates: ['pending'],\\n    variant: 'primary',\\n    className: 'mr-2',\\n  };\\n  return (\\n    <React.Fragment>\\n      <StatefulButton state=\\\"default\\\" {...downloadButtonProps} />\\n      <StatefulButton state=\\\"pending\\\" {...downloadButtonProps} />\\n      <StatefulButton state=\\\"complete\\\" {...downloadButtonProps} />\\n      <StatefulButton state=\\\"error\\\" {...downloadButtonProps} />\\n    </React.Fragment>\\n  );\\n};\\n\")), mdx(\"h3\", {\n    \"id\": \"custom-states-with-paragon-icons\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#custom-states-with-paragon-icons\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Custom states with paragon icons\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"() => {\\n  const buttonProps = {\\n    labels: {\\n      unedited: 'Save (no changes)',\\n      edited: 'Save Changes',\\n    },\\n    icons: {\\n      unedited: <Icon src={Add} />,\\n      edited: <Icon src={Add} />,\\n    },\\n    disabledStates: ['unedited'],\\n    variant: 'primary',\\n    className: 'mr-2',\\n  };\\n  return (\\n    <React.Fragment>\\n      <StatefulButton state=\\\"unedited\\\" {...buttonProps} />\\n      <StatefulButton state=\\\"edited\\\" {...buttonProps} />\\n    </React.Fragment>\\n  );\\n};\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"StatefulButton","status":"Stable","notes":"","components":["StatefulButton"]}},"components":{"nodes":[{"displayName":"StatefulButton","props":[{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"e0310b57-6471-54d8-bdfa-875f44032ff5","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'default'"},"name":"state","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Each state has:\n- A label (required)\n- An icon\n- an option to be disabled\n\nControl the state with the `state` prop. Example usage:\n\n```jsx\n<StatefulButton\n  state=\"pending\"\n  labels={{\n    default: 'Download',\n    pending: 'Downloading',\n    complete: 'Downloaded',\n  }}\n  icons={{\n    default: <Icon className=\"fa fa-download\" />,\n    pending: <Icon className=\"fa fa-spinner fa-spin\" />,\n    complete: <Icon className=\"fa fa-check\" />,\n  }}\n  disabledStates=['pending']\n  className='btn-primary mr-2'\n/>\n```","doclets":[],"description":{"id":"ceed9c3e-9597-51ba-8c44-6209f3616db9","text":"Each state has:\n- A label (required)\n- An icon\n- an option to be disabled\n\nControl the state with the `state` prop. Example usage:\n\n```jsx\n<StatefulButton\n  state=\"pending\"\n  labels={{\n    default: 'Download',\n    pending: 'Downloading',\n    complete: 'Downloaded',\n  }}\n  icons={{\n    default: <Icon className=\"fa fa-download\" />,\n    pending: <Icon className=\"fa fa-spinner fa-spin\" />,\n    complete: <Icon className=\"fa fa-check\" />,\n  }}\n  disabledStates=['pending']\n  className='btn-primary mr-2'\n/>\n```","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Each state has:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A label (required)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An icon\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"an option to be disabled\")), mdx(\"p\", null, \"Control the state with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state\"), \" prop. Example usage:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<StatefulButton\\n  state=\\\"pending\\\"\\n  labels={{\\n    default: 'Download',\\n    pending: 'Downloading',\\n    complete: 'Downloaded',\\n  }}\\n  icons={{\\n    default: <Icon className=\\\"fa fa-download\\\" />,\\n    pending: <Icon className=\\\"fa fa-spinner fa-spin\\\" />,\\n    complete: <Icon className=\\\"fa fa-check\\\" />,\\n  }}\\n  disabledStates=['pending']\\n  className='btn-primary mr-2'\\n/>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"labels","type":{"name":"objectOf","raw":null,"value":{"name":"node"}},"required":true,"docblock":"Required. Each state has a `label`.","doclets":[],"description":{"id":"4e58a301-3736-5f26-afe4-b8b7d57cccc5","text":"Required. Each state has a `label`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Required. Each state has a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"label\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{\n  default: undefined,\n  pending: <Icon src={SpinnerSimple} className={classNames('icon-spin')} />,\n  complete: <Icon src={CheckCircleOutline} />,\n  error: <Icon src={Cancel} />,\n}"},"name":"icons","type":{"name":"objectOf","raw":null,"value":{"name":"node"}},"required":false,"docblock":"Required. Each state has an `icon`.","doclets":[],"description":{"id":"91ffce8d-412a-59d6-aa14-7da0bf8e9d5c","text":"Required. Each state has an `icon`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Required. Each state has an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"icon\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"['pending', 'complete']"},"name":"disabledStates","type":{"name":"arrayOf","raw":null,"value":{"name":"string"}},"required":false,"docblock":"Required. Each state has a `disabledState`","doclets":[],"description":{"id":"511978ac-2d50-5fde-8772-c6801ff4adc1","text":"Required. Each state has a `disabledState`","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Required. Each state has a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabledState\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"onClick","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Specifies the callback function when the button is clicked","doclets":[],"description":{"id":"dbe5f54d-3d6a-5ba9-9222-4fd417a8b240","text":"Specifies the callback function when the button is clicked","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the callback function when the button is clicked\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"2204c636-5683-5512-bbee-ac1318dde0a1","components":["StatefulButton"],"cssVariables":""}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}