{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/datatable/dataviews/",
    "result": {"data":{"mdx":{"id":"1e836b10-bc72-5dd5-a326-8a9316b8300d","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Data views\",\n  \"type\": \"component\",\n  \"components\": [\"Table\", \"TableCell\", \"TableHeaderCell\", \"TableHeaderRow\", \"TableRow\", \"CardView\"],\n  \"categories\": [\"Table\"],\n  \"status\": \"New\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"In progress\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar PropsTable = makeShortcode(\"PropsTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Link, {\n    to: \"/components/datatable/\",\n    mdxType: \"Link\"\n  }, \"Main DataTable page\"), mdx(\"p\", null, \"There are currently two built-in options for displaying the data \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DataTable.Table\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CardView\"), \", but you can also build your own.\"), mdx(\"h2\", {\n    \"id\": \"datatabletable\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#datatabletable\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"DataTable.Table\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Table\"), \" component is meant to be rendered within a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DataTableContext\"), \" (provided by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DataTable\"), \" here).\\nIt displays the data provided by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DataTableContext\"), \" as an html table.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<DataTable\\n  isSelectable\\n  columns={[\\n    {\\n      Header: 'Name',\\n      accessor: 'name',\\n\\n    },\\n    {\\n      Header: 'Age',\\n      accessor: 'age',\\n    },\\n    {\\n      Header: 'Famous For',\\n      accessor: 'famous_for',\\n    },\\n    {\\n      Header: 'Coat Color',\\n      accessor: 'color',\\n    },\\n  ]}\\n  itemCount={7}\\n  data={[\\n    {\\n      name: 'Lil Bub',\\n      color: 'brown tabby',\\n      famous_for: 'weird tongue',\\n      age: 4,\\n    },\\n    {\\n      name: 'Grumpy Cat',\\n      color: 'siamese',\\n      famous_for: 'serving moods',\\n      age: 4,\\n    },\\n    {\\n      name: 'Smoothie',\\n      color: 'orange tabby',\\n      famous_for: 'modeling',\\n      age: 1,\\n    },\\n    {\\n      name: 'Maru',\\n      color: 'brown tabby',\\n      famous_for: 'being a lovable oaf',\\n      age: 12,\\n    },\\n    {\\n      name: 'Keyboard Cat',\\n      color: 'orange tabby',\\n      famous_for: 'piano virtuoso',\\n      age: 9,\\n    },\\n    {\\n      name: 'Long Cat',\\n      color: 'russian white',\\n      famous_for:\\n        'being loooooooooooooooooooooooooooooooooooooooooooooooooooooong',\\n      age: 9,\\n    },\\n    {\\n      name: 'Zeno',\\n      color: 'brown tabby',\\n      famous_for: 'getting halfway there',\\n      age: 17,\\n    },\\n  ]}\\n  additionalColumns={[\\n      {\\n        id: 'action',\\n        Header: 'Action',\\n        // Proptypes disabled as this prop is passed in separately\\n        Cell: ({ row }) => <Button variant=\\\"link\\\" onClick={() => console.log(\\\"Assign\\\", row)}>Assign</Button>,\\n      }\\n    ]}\\n>\\n  <DataTable.Table />\\n</DataTable>\\n\")), mdx(PropsTable, {\n    displayName: \"Table\",\n    content: \"The DataTable.Table component expects to receive a react-table instance from the DataTableContext.\",\n    mdxType: \"PropsTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"table-subcomponents\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#table-subcomponents\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Table Subcomponents\"), mdx(\"p\", null, \"Subcomponents of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DataTable.Table\"), \" can be used independently of the main component. They are designed for use with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-table\"), \" instance.\"), mdx(PropsTable, {\n    displayName: \"TableRow\",\n    mdxType: \"PropsTable\"\n  }), mdx(PropsTable, {\n    displayName: \"TableCell\",\n    mdxType: \"PropsTable\"\n  }), mdx(PropsTable, {\n    displayName: \"TableHeaderCell\",\n    mdxType: \"PropsTable\"\n  }), mdx(PropsTable, {\n    displayName: \"TableHeaderRow\",\n    mdxType: \"PropsTable\"\n  }), mdx(\"h2\", {\n    \"id\": \"cardview-and-alternate-table-components\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#cardview-and-alternate-table-components\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"CardView and alternate table components\"), mdx(\"p\", null, \"You may choose to use any table component by using the following code in your display component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const instance = useContext(DataTableContext)\\n\")), mdx(\"p\", null, \"The CardView takes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CardComponent\"), \" that is personalized to the table in question and displays\\na responsive grid of cards.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<DataTable\\n  isFilterable\\n  defaultColumnValues={{ Filter: TextFilter }}\\n  isPaginated\\n  isSortable\\n  initialState={{\\n    pageSize: 3,\\n    pageIndex: 0\\n  }}\\n  itemCount={20}\\n  fetchData={(currentState) => console.log(`This function will be called with the value: ${JSON.stringify(currentState)}}`)}\\n  data={[\\n  {\\n    \\\"id\\\": \\\"2baf70d1-42bb-4437-b551-e5fed5a87abe\\\",\\n    \\\"title\\\": \\\"Castle in the Sky\\\",\\n    \\\"director\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"producer\\\": \\\"Isao Takahata\\\",\\n    \\\"release_date\\\": \\\"1986\\\",\\n    \\\"rt_score\\\": \\\"95\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"12cfb892-aac0-4c5b-94af-521852e46d6a\\\",\\n    \\\"title\\\": \\\"Grave of the Fireflies\\\",\\n    \\\"director\\\": \\\"Isao Takahata\\\",\\n    \\\"producer\\\": \\\"Toru Hara\\\",\\n    \\\"release_date\\\": \\\"1988\\\",\\n    \\\"rt_score\\\": \\\"97\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"58611129-2dbc-4a81-a72f-77ddfc1b1b49\\\",\\n    \\\"title\\\": \\\"My Neighbor Totoro\\\",\\n    \\\"director\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"producer\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"release_date\\\": \\\"1988\\\",\\n    \\\"rt_score\\\": \\\"93\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"ea660b10-85c4-4ae3-8a5f-41cea3648e3e\\\",\\n    \\\"title\\\": \\\"Kiki's Delivery Service\\\",\\n    \\\"director\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"producer\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"release_date\\\": \\\"1989\\\",\\n    \\\"rt_score\\\": \\\"96\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"4e236f34-b981-41c3-8c65-f8c9000b94e7\\\",\\n    \\\"title\\\": \\\"Only Yesterday\\\",\\n    \\\"director\\\": \\\"Isao Takahata\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"1991\\\",\\n    \\\"rt_score\\\": \\\"100\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"ebbb6b7c-945c-41ee-a792-de0e43191bd8\\\",\\n    \\\"title\\\": \\\"Porco Rosso\\\",\\n    \\\"director\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"1992\\\",\\n    \\\"rt_score\\\": \\\"94\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"1b67aa9a-2e4a-45af-ac98-64d6ad15b16c\\\",\\n    \\\"title\\\": \\\"Pom Poko\\\",\\n    \\\"director\\\": \\\"Isao Takahata\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"1994\\\",\\n    \\\"rt_score\\\": \\\"78\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"ff24da26-a969-4f0e-ba1e-a122ead6c6e3\\\",\\n    \\\"title\\\": \\\"Whisper of the Heart\\\",\\n    \\\"director\\\": \\\"Yoshifumi Kond\\u014D\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"1995\\\",\\n    \\\"rt_score\\\": \\\"91\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"0440483e-ca0e-4120-8c50-4c8cd9b965d6\\\",\\n    \\\"title\\\": \\\"Princess Mononoke\\\",\\n    \\\"director\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"1997\\\",\\n    \\\"rt_score\\\": \\\"92\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"45204234-adfd-45cb-a505-a8e7a676b114\\\",\\n    \\\"title\\\": \\\"My Neighbors the Yamadas\\\",\\n    \\\"director\\\": \\\"Isao Takahata\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"1999\\\",\\n    \\\"rt_score\\\": \\\"75\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"dc2e6bd1-8156-4886-adff-b39e6043af0c\\\",\\n    \\\"title\\\": \\\"Spirited Away\\\",\\n    \\\"director\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"2001\\\",\\n    \\\"rt_score\\\": \\\"97\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"90b72513-afd4-4570-84de-a56c312fdf81\\\",\\n    \\\"title\\\": \\\"The Cat Returns\\\",\\n    \\\"director\\\": \\\"Hiroyuki Morita\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"2002\\\",\\n    \\\"rt_score\\\": \\\"89\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"cd3d059c-09f4-4ff3-8d63-bc765a5184fa\\\",\\n    \\\"title\\\": \\\"Howl's Moving Castle\\\",\\n    \\\"director\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"2004\\\",\\n    \\\"rt_score\\\": \\\"87\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"112c1e67-726f-40b1-ac17-6974127bb9b9\\\",\\n    \\\"title\\\": \\\"Tales from Earthsea\\\",\\n    \\\"director\\\": \\\"Gor\\u014D Miyazaki\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"2006\\\",\\n    \\\"rt_score\\\": \\\"41\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"758bf02e-3122-46e0-884e-67cf83df1786\\\",\\n    \\\"title\\\": \\\"Ponyo\\\",\\n    \\\"director\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"2008\\\",\\n    \\\"rt_score\\\": \\\"92\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"2de9426b-914a-4a06-a3a0-5e6d9d3886f6\\\",\\n    \\\"title\\\": \\\"Arrietty\\\",\\n    \\\"director\\\": \\\"Hiromasa Yonebayashi\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"2010\\\",\\n    \\\"rt_score\\\": \\\"95\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"45db04e4-304a-4933-9823-33f389e8d74d\\\",\\n    \\\"title\\\": \\\"From Up on Poppy Hill\\\",\\n    \\\"director\\\": \\\"Gor\\u014D Miyazaki\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"2011\\\",\\n    \\\"rt_score\\\": \\\"83\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"67405111-37a5-438f-81cc-4666af60c800\\\",\\n    \\\"title\\\": \\\"The Wind Rises\\\",\\n    \\\"director\\\": \\\"Hayao Miyazaki\\\",\\n    \\\"producer\\\": \\\"Toshio Suzuki\\\",\\n    \\\"release_date\\\": \\\"2013\\\",\\n    \\\"rt_score\\\": \\\"89\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"578ae244-7750-4d9f-867b-f3cd3d6fecf4\\\",\\n    \\\"title\\\": \\\"The Tale of the Princess Kaguya\\\",\\n    \\\"director\\\": \\\"Isao Takahata\\\",\\n    \\\"producer\\\": \\\"Yoshiaki Nishimura\\\",\\n    \\\"release_date\\\": \\\"2013\\\",\\n    \\\"rt_score\\\": \\\"100\\\",\\n  },\\n  {\\n    \\\"id\\\": \\\"5fdfb320-2a02-49a7-94ff-5ca418cae602\\\",\\n    \\\"title\\\": \\\"When Marnie Was There\\\",\\n    \\\"director\\\": \\\"Hiromasa Yonebayashi\\\",\\n    \\\"producer\\\": \\\"Yoshiaki Nishimura\\\",\\n    \\\"release_date\\\": \\\"2014\\\",\\n    \\\"rt_score\\\": \\\"92\\\",\\n  }\\n]}\\n  columns={[\\n    {\\n      Header: 'Title',\\n      accessor: 'title',\\n\\n    },\\n    {\\n      Header: 'Director',\\n      accessor: 'director',\\n    },\\n    {\\n      Header: 'Release date',\\n      accessor: 'release_date',\\n    },\\n  ]}\\n  bulkActions={[\\n    {\\n      buttonText: 'Download CSV',\\n      handleClick: (selectedRows) => console.log('Downloading CSV ', selectedRows),\\n    },\\n  ]}\\n>\\n  <TableControlBar />\\n  <CardView CardComponent={MiyazakiCard} />\\n  <TableFooter />\\n</DataTable>\\n\")), mdx(\"h3\", {\n    \"id\": \"sample-card-component-for-use-with-cardview\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#sample-card-component-for-use-with-cardview\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Sample Card component for use with CardView\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CardComponent\"), \" prop on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CardView\"), \" represents a table row, and will receive the row that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-table\"), \"\\nprovides as props.\"), mdx(PropsTable, {\n    displayName: \"CardView\",\n    mdxType: \"PropsTable\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const MiyazakiCard = ({ className, original  }) => {\\n  const { title, director, release_date } = original;\\n\\n  return (\\n    <Card className={className}>\\n      <Card.Img variant=\\\"top\\\" src=\\\"https://source.unsplash.com/360x200/?nature,flower\\\" />\\n      <Card.Body>\\n        <Card.Title>{title}</Card.Title>\\n        <dl>\\n          <dt>Director</dt><dd>{director}</dd>\\n          <dt>Release Date</dt><dd>{release_date}</dd>\\n        </dl>\\n      </Card.Body>\\n    </Card>\\n  );\\n};\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Data views","status":"New","notes":null,"components":["Table","TableCell","TableHeaderCell","TableHeaderRow","TableRow","CardView"]}},"components":{"nodes":[{"displayName":"CardView","props":[{"defaultValue":{"value":"''"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"The class name for the CardGrid component","doclets":[],"description":{"id":"c6d7ff33-ddb4-57a0-9007-1f34cf43a00e","text":"The class name for the CardGrid component","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The class name for the CardGrid component\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{\n  xs: 12,\n  lg: 6,\n  xl: 4,\n}"},"name":"columnSizes","type":{"name":"shape","raw":null,"value":{"xs":{"name":"number","required":false},"sm":{"name":"number","required":false},"md":{"name":"number","required":false},"lg":{"name":"number","required":false},"xl":{"name":"number","required":false}}},"required":false,"docblock":"An object containing the desired column size at each breakpoint, following a similar\nprops API as ``react-bootstrap/Col``","doclets":[],"description":{"id":"cc2de859-b376-5328-975b-6b15efeff308","text":"An object containing the desired column size at each breakpoint, following a similar\nprops API as ``react-bootstrap/Col``","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An object containing the desired column size at each breakpoint, following a similar\\nprops API as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-bootstrap/Col\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"CardComponent","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Your card component must be individualized to your table.\nIt will be called with props from the \"row\" of data it will display","doclets":[],"description":{"id":"8feffd28-94f1-58e5-971b-8c938d1d97ce","text":"Your card component must be individualized to your table.\nIt will be called with props from the \"row\" of data it will display","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Your card component must be individualized to your table.\\nIt will be called with props from the \\\"row\\\" of data it will display\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"Table","props":[{"defaultValue":{"value":"true"},"name":"isStriped","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"should table rows be striped","doclets":[],"description":{"id":"405f1765-72b1-5001-894d-26ab859ea45d","text":"should table rows be striped","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"should table rows be striped\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"TableCell","props":[{"defaultValue":null,"name":"getCellProps","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Props for the td element","doclets":[],"description":{"id":"db40e927-8979-5697-9c92-74ad7eef6969","text":"Props for the td element","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Props for the td element\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"render","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Function that renders the cell contents. Will be called with the string 'Cell'","doclets":[],"description":{"id":"8ee21bfd-a81e-5f58-9e50-94a5ce7b4b51","text":"Function that renders the cell contents. Will be called with the string 'Cell'","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Function that renders the cell contents. Will be called with the string 'Cell'\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"column","type":{"name":"shape","raw":null,"value":{"cellClassName":{"name":"string","description":"Class(es) to be applied to the cells in the given column","required":false}}},"required":true,"docblock":"Table column","doclets":[],"description":{"id":"2b88adda-4e30-5705-b0d0-cffaf5ca0c8e","text":"Table column","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Table column\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"TableHeaderCell","props":[{"defaultValue":null,"name":"getHeaderProps","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Returns props for the th element","doclets":[],"description":{"id":"ec46a03c-e9f7-5ef4-b46e-605ceec803ad","text":"Returns props for the th element","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Returns props for the th element\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"isSorted","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Indicates whether or not a column is sorted","doclets":[],"description":{"id":"2a573489-06ba-5af2-9610-c75c2ecf28d5","text":"Indicates whether or not a column is sorted","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Indicates whether or not a column is sorted\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"render","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Renders the header content. Passed the string 'Header'","doclets":[],"description":{"id":"94367885-11b5-5504-afda-e1ae1d1f8c4f","text":"Renders the header content. Passed the string 'Header'","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Renders the header content. Passed the string 'Header'\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"isSortedDesc","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Indicates whether the column is sorted in descending order","doclets":[],"description":{"id":"9c7c33da-9b7e-5cee-a407-4f9c7d6a49c1","text":"Indicates whether the column is sorted in descending order","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Indicates whether the column is sorted in descending order\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"() => {}"},"name":"getSortByToggleProps","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Gets props related to sorting that will be passed to th","doclets":[],"description":{"id":"db1a50db-0c04-521a-825a-9b98448acbdf","text":"Gets props related to sorting that will be passed to th","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gets props related to sorting that will be passed to th\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"canSort","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Indicates whether a column is sortable","doclets":[],"description":{"id":"2bada516-6996-57b3-9586-874431e881e6","text":"Indicates whether a column is sortable","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Indicates whether a column is sortable\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"null"},"name":"headerClassName","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Class(es) to be applied to header cells","doclets":[],"description":{"id":"477bb3e2-d4ef-5d83-b385-2c65a3f23d6e","text":"Class(es) to be applied to header cells","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Class(es) to be applied to header cells\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"TableHeaderRow","props":[{"defaultValue":null,"name":"headerGroups","type":{"name":"arrayOf","raw":null,"value":{"name":"shape","value":{"headers":{"name":"arrayOf","value":{"name":"shape","value":{"getHeaderProps":{"name":"func","description":"Props for the TableHeaderCell component. Must include a key","required":true}}},"required":true},"getHeaderGroupProps":{"name":"func","description":"Returns props for the header tr element","required":true}}}},"required":true,"docblock":"","doclets":[],"description":{"id":"c1edfdd3-dc7a-5f70-a779-a028e8cc387b","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"TableRow","props":[{"defaultValue":null,"name":"row","type":{"name":"shape","raw":null,"value":{"getRowProps":{"name":"func","description":"props to include on the tr tag (must include id)","required":true},"cells":{"name":"arrayOf","value":{"name":"shape","value":{}},"description":"cells in the row","required":true},"id":{"name":"string","description":"row id","required":true},"isSelected":{"name":"bool","description":"indicates if row has been selected","required":false},"isExpanded":{"name":"bool","description":"Indicates if row has been expanded.","required":false}}},"required":true,"docblock":"Row data that is received from `react-table` API.","doclets":[],"description":{"id":"0ae6cfdb-7422-56ee-a8c2-eac26f31940c","text":"Row data that is received from `react-table` API.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Row data that is received from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-table\"), \" API.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"Table","props":[{"defaultValue":{"value":"null"},"name":"caption","type":{"name":"union","raw":null,"value":[{"name":"string"},{"name":"element"}]},"required":false,"docblock":"","doclets":[],"description":{"id":"9be9d065-7e0a-54cf-bfda-1af3c1da984b","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"7bb3fbbb-e827-5741-9109-42e5d900d890","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"data","type":{"name":"arrayOf","raw":null,"value":{"name":"object"}},"required":true,"docblock":"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\n\n1. `label` (string or element; required) contains the display string for each column's heading.\n2. `key` (string; required) maps that label to its corresponding datum for each row in `data`, to ensure table data are displayed in their appropriate columns.\n3. `columnSortable` (boolean; optional) specifies at the column-level whether the column is sortable. If `columnSortable` is `true`, a sort button will be rendered in the column table heading. It is only required if `tableSortable` is set to `true`.\n4. `onSort` (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's `columnSortable` is set to `true`.\n5. `hideHeader` (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\n6. `width` (string; conditionally required) only if `hasFixedColumnWidths` is set to `true`, the `<td>` elements' `class` attributes will be set to this value. This allows restricting columns to specific widths. See [Bootstrap's grid documentation](https://getbootstrap.com/docs/4.0/layout/grid/) for `col` class names that can be used.\n\nThe order of objects in `columns` specifies the order of the columns in the table.","doclets":[],"description":{"id":"af2786df-801a-5bad-b591-469a28e4d0fa","text":"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\n\n1. `label` (string or element; required) contains the display string for each column's heading.\n2. `key` (string; required) maps that label to its corresponding datum for each row in `data`, to ensure table data are displayed in their appropriate columns.\n3. `columnSortable` (boolean; optional) specifies at the column-level whether the column is sortable. If `columnSortable` is `true`, a sort button will be rendered in the column table heading. It is only required if `tableSortable` is set to `true`.\n4. `onSort` (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's `columnSortable` is set to `true`.\n5. `hideHeader` (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\n6. `width` (string; conditionally required) only if `hasFixedColumnWidths` is set to `true`, the `<td>` elements' `class` attributes will be set to this value. This allows restricting columns to specific widths. See [Bootstrap's grid documentation](https://getbootstrap.com/docs/4.0/layout/grid/) for `col` class names that can be used.\n\nThe order of objects in `columns` specifies the order of the columns in the table.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"label\"), \" (string or element; required) contains the display string for each column's heading.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"key\"), \" (string; required) maps that label to its corresponding datum for each row in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"data\"), \", to ensure table data are displayed in their appropriate columns.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" (boolean; optional) specifies at the column-level whether the column is sortable. If \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", a sort button will be rendered in the column table heading. It is only required if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tableSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onSort\"), \" (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hideHeader\"), \" (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"width\"), \" (string; conditionally required) only if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hasFixedColumnWidths\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<td>\"), \" elements' \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"class\"), \" attributes will be set to this value. This allows restricting columns to specific widths. See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://getbootstrap.com/docs/4.0/layout/grid/\"\n  }, \"Bootstrap's grid documentation\"), \" for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"col\"), \" class names that can be used.\")), mdx(\"p\", null, \"The order of objects in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"columns\"), \" specifies the order of the columns in the table.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"columns","type":{"name":"arrayOf","raw":null,"value":{"name":"shape","value":{"key":{"name":"string","required":true},"label":{"name":"union","value":[{"name":"string"},{"name":"element"}],"required":true},"columnSortable":{"name":"custom","raw":"isRequiredIf(PropTypes.bool, props => props.tableSortable)","required":false},"onSort":{"name":"custom","raw":"isRequiredIf(PropTypes.func, props => props.columnSortable)","required":false},"hideHeader":{"name":"bool","required":false},"width":{"name":"custom","raw":"isRequiredIf(PropTypes.string, props => props.hasFixedColumnWidths)","required":false}}}},"required":true,"docblock":"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\n\n1. `label` (string or element; required) contains the display string for each column's heading.\n2. `key` (string; required) maps that label to its corresponding datum for each row in `data`, to ensure table data are displayed in their appropriate columns.\n3. `columnSortable` (boolean; optional) specifies at the column-level whether the column is sortable. If `columnSortable` is `true`, a sort button will be rendered in the column table heading. It is only required if `tableSortable` is set to `true`.\n4. `onSort` (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's `columnSortable` is set to `true`.\n5. `hideHeader` (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\n6. `width` (string; conditionally required) only if `hasFixedColumnWidths` is set to `true`, the `<td>` elements' `class` attributes will be set to this value. This allows restricting columns to specific widths. See [Bootstrap's grid documentation](https://getbootstrap.com/docs/4.0/layout/grid/) for `col` class names that can be used.\n\nThe order of objects in `columns` specifies the order of the columns in the table.","doclets":[],"description":{"id":"7b1577d7-fc6a-5ff0-b2c2-feb1f8ad4daf","text":"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\n\n1. `label` (string or element; required) contains the display string for each column's heading.\n2. `key` (string; required) maps that label to its corresponding datum for each row in `data`, to ensure table data are displayed in their appropriate columns.\n3. `columnSortable` (boolean; optional) specifies at the column-level whether the column is sortable. If `columnSortable` is `true`, a sort button will be rendered in the column table heading. It is only required if `tableSortable` is set to `true`.\n4. `onSort` (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's `columnSortable` is set to `true`.\n5. `hideHeader` (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\n6. `width` (string; conditionally required) only if `hasFixedColumnWidths` is set to `true`, the `<td>` elements' `class` attributes will be set to this value. This allows restricting columns to specific widths. See [Bootstrap's grid documentation](https://getbootstrap.com/docs/4.0/layout/grid/) for `col` class names that can be used.\n\nThe order of objects in `columns` specifies the order of the columns in the table.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"label\"), \" (string or element; required) contains the display string for each column's heading.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"key\"), \" (string; required) maps that label to its corresponding datum for each row in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"data\"), \", to ensure table data are displayed in their appropriate columns.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" (boolean; optional) specifies at the column-level whether the column is sortable. If \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", a sort button will be rendered in the column table heading. It is only required if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tableSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onSort\"), \" (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hideHeader\"), \" (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"width\"), \" (string; conditionally required) only if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hasFixedColumnWidths\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<td>\"), \" elements' \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"class\"), \" attributes will be set to this value. This allows restricting columns to specific widths. See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://getbootstrap.com/docs/4.0/layout/grid/\"\n  }, \"Bootstrap's grid documentation\"), \" for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"col\"), \" class names that can be used.\")), mdx(\"p\", null, \"The order of objects in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"columns\"), \" specifies the order of the columns in the table.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"[]"},"name":"headingClassName","type":{"name":"arrayOf","raw":null,"value":{"name":"string"}},"required":false,"docblock":"Specifies Bootstrap class names to apply to the table heading. Options are detailed in [Bootstrap's docs](https://getbootstrap.com/docs/4.0/content/tables/#table-head-options).","doclets":[],"description":{"id":"780d94fa-2a2c-5e7f-b140-c3c0461c6910","text":"Specifies Bootstrap class names to apply to the table heading. Options are detailed in [Bootstrap's docs](https://getbootstrap.com/docs/4.0/content/tables/#table-head-options).","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies Bootstrap class names to apply to the table heading. Options are detailed in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://getbootstrap.com/docs/4.0/content/tables/#table-head-options\"\n  }, \"Bootstrap's docs\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"tableSortable","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Specifies whether the table is sortable. This setting supercedes column-level sortability, so if it is `false`, no sortable components will be rendered.","doclets":[],"description":{"id":"7b76d30b-96d5-50a5-8e8e-57b56efdffaa","text":"Specifies whether the table is sortable. This setting supercedes column-level sortability, so if it is `false`, no sortable components will be rendered.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies whether the table is sortable. This setting supercedes column-level sortability, so if it is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \", no sortable components will be rendered.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"hasFixedColumnWidths","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Specifies whether the table's columns have fixed widths. Every element in `columns` must define a `width` if this is `true`.","doclets":[],"description":{"id":"0ef46e8d-5860-51eb-8df8-f4ff80a332c9","text":"Specifies whether the table's columns have fixed widths. Every element in `columns` must define a `width` if this is `true`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies whether the table's columns have fixed widths. Every element in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"columns\"), \" must define a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"width\"), \" if this is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"defaultSortedColumn","type":{"name":"custom","raw":"isRequiredIf(PropTypes.string, props => props.tableSortable)","value":null},"required":false,"docblock":"Specifies the key of the column that is sorted by default. It is only required if `tableSortable` is set to `true`.","doclets":[],"description":{"id":"2b7ff643-cc83-5d61-a867-7aecd9e02e0a","text":"Specifies the key of the column that is sorted by default. It is only required if `tableSortable` is set to `true`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the key of the column that is sorted by default. It is only required if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tableSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"defaultSortDirection","type":{"name":"custom","raw":"isRequiredIf(PropTypes.string, props => props.tableSortable)","value":null},"required":false,"docblock":"Specifies the direction the `defaultSortedColumn` is sorted in by default; it will typically be either 'asc' or 'desc'. It is only required if `tableSortable` is set to `true`.","doclets":[],"description":{"id":"96afad8b-8692-52b5-acef-e623cac71ccb","text":"Specifies the direction the `defaultSortedColumn` is sorted in by default; it will typically be either 'asc' or 'desc'. It is only required if `tableSortable` is set to `true`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the direction the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"defaultSortedColumn\"), \" is sorted in by default; it will typically be either 'asc' or 'desc'. It is only required if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tableSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{\n  asc: 'sort ascending',\n  desc: 'sort descending',\n  defaultText: 'click to sort',\n}"},"name":"sortButtonsScreenReaderText","type":{"name":"custom","raw":"isRequiredIf(\n  PropTypes.shape({\n    asc: PropTypes.string,\n    desc: PropTypes.string,\n    defaultText: PropTypes.string,\n  }),\n  props => props.tableSortable,\n)","value":null},"required":false,"docblock":"Specifies the screen reader only text that accompanies the sort buttons for sortable columns. It takes the form of an object containing the following keys:\n\n1. `asc`: (string) specifies the screen reader only text for sort buttons in the ascending state.\n2. `desc`: (string) specifies the screen reader only text for sort buttons in the descending state.\n3. `defaultText`: (string) specifies the screen reader only text for sort buttons that are not engaged.\n\nIt is only required if `tableSortable` is set to `true`.\n\nDefault:\n\n```javascript\n{\n  asc: 'sort ascending',\n  desc: 'sort descending',\n  defaultText: 'click to sort',\n}\n```","doclets":[],"description":{"id":"c832ad71-dc64-568b-aaa6-24f2784e834b","text":"Specifies the screen reader only text that accompanies the sort buttons for sortable columns. It takes the form of an object containing the following keys:\n\n1. `asc`: (string) specifies the screen reader only text for sort buttons in the ascending state.\n2. `desc`: (string) specifies the screen reader only text for sort buttons in the descending state.\n3. `defaultText`: (string) specifies the screen reader only text for sort buttons that are not engaged.\n\nIt is only required if `tableSortable` is set to `true`.\n\nDefault:\n\n```javascript\n{\n  asc: 'sort ascending',\n  desc: 'sort descending',\n  defaultText: 'click to sort',\n}\n```","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the screen reader only text that accompanies the sort buttons for sortable columns. It takes the form of an object containing the following keys:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"asc\"), \": (string) specifies the screen reader only text for sort buttons in the ascending state.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"desc\"), \": (string) specifies the screen reader only text for sort buttons in the descending state.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"defaultText\"), \": (string) specifies the screen reader only text for sort buttons that are not engaged.\")), mdx(\"p\", null, \"It is only required if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tableSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\"), mdx(\"p\", null, \"Default:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"{\\n  asc: 'sort ascending',\\n  desc: 'sort descending',\\n  defaultText: 'click to sort',\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"rowHeaderColumnKey","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies the key for the column that should act as a row header. Rather than rendering as `<td>` elements,\ncells in this column will render as `<th scope=\"row\">`","doclets":[],"description":{"id":"cb629ef4-d668-509f-9b1e-34c99bc0f1a4","text":"Specifies the key for the column that should act as a row header. Rather than rendering as `<td>` elements,\ncells in this column will render as `<th scope=\"row\">`","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the key for the column that should act as a row header. Rather than rendering as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<td>\"), \" elements,\\ncells in this column will render as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<th scope=\\\"row\\\">\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"1e836b10-bc72-5dd5-a326-8a9316b8300d","components":["Table","TableCell","TableHeaderCell","TableHeaderRow","TableRow","CardView"],"cssVariables":""}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}