{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/datatable/",
    "result": {"data":{"mdx":{"id":"5ec0205e-16e5-51f5-9f82-7423520011e6","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"DataTable\",\n  \"type\": \"component\",\n  \"components\": [\"DataTable\", \"DataViewToggle\", \"BulkActions\", \"TableActions\", \"Table\", \"CardView\", \"TableCell\", \"TableHeaderCell\", \"TableHeaderRow\", \"TableRow\", \"FilterStatus\", \"SelectionStatus\", \"RowStatus\", \"SmartStatus\", \"TablePagination\", \"TextFilter\"],\n  \"categories\": [\"Table\"],\n  \"status\": \"New\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"In progress\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The DataTable component is a wrapper that uses the \", mdx(\"a\", {\n    href: \"https://react-table.tanstack.com/docs/overview\"\n  }, \"react-table\"), \" library to\\ncreate tables. It can be used as is, or its subcomponents can be used on their own, allowing the developer full control.\"), mdx(\"p\", null, \"Paragon also exports all React hooks from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-table\"), \" allowing the developers to use them and make customizations more freely without adding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-table\"), \" as a separate dependency to their project.\\nFor full list of available hooks view \", mdx(\"a\", {\n    href: \"https://react-table.tanstack.com/docs/api/overview\"\n  }, \"react-table API reference\"), \".\"), mdx(\"h2\", {\n    \"id\": \"how-children-get-information\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#how-children-get-information\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"How children get information\"), mdx(\"p\", null, \"The table context gets the current \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-table\"), \" instance of the table from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DataTable\"), \" component and makes it available to any child component within the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DataTable\"), \" provider.\\nIn addition to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-table\"), \" instance, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"itemCount\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"numBreakoutFilters\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bulkActions\"), \", and any props that are not listed in the\\nprops table below are available to child components through the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DataTableContext\"), \".\"), mdx(\"p\", null, \"How to use context in a custom component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const instance = useContext(DataTableContext)\\n\")), mdx(\"h2\", {\n    \"id\": \"frontend-filtering-and-sorting\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#frontend-filtering-and-sorting\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Frontend filtering and sorting\"), mdx(\"p\", null, \"For small tables (less than ~10,000 rows), filtering, sorting and pagination can be done quickly and easily on the frontend.\"), mdx(\"p\", null, \"In this example, a default TextFilter component is used for all columns. A default filter can be passed in,\\nor a filter component can be defined on the column. See \", mdx(\"a\", {\n    href: \"https://react-table.tanstack.com/docs/api/useFilters\"\n  }, \"react-table filters documentation\"), \"\\nfor more information.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"  <DataTable\\n    isFilterable\\n    isSortable\\n    defaultColumnValues={{ Filter: TextFilter }}\\n    itemCount={7}\\n    data={[\\n      {\\n        name: 'Lil Bub',\\n        color: 'brown tabby',\\n        famous_for: 'weird tongue',\\n      },\\n      {\\n        name: 'Grumpy Cat',\\n        color: 'siamese',\\n        famous_for: 'serving moods',\\n      },\\n      {\\n        name: 'Smoothie',\\n        color: 'orange tabby',\\n        famous_for: 'modeling',\\n      },\\n      {\\n        name: 'Maru',\\n        color: 'brown tabby',\\n        famous_for: 'being a lovable oaf',\\n      },\\n      {\\n        name: 'Keyboard Cat',\\n        color: 'orange tabby',\\n        famous_for: 'piano virtuoso',\\n      },\\n      {\\n        name: 'Long Cat',\\n        color: 'russian white',\\n        famous_for:\\n          'being loooooooooooooooooooooooooooooooooooooooooooooooooooooong',\\n      },\\n      {\\n        name: 'Zeno',\\n        color: 'brown tabby',\\n        famous_for: 'getting halfway there'\\n      },\\n    ]}\\n    columns={[\\n      {\\n        Header: 'Name',\\n        accessor: 'name',\\n\\n      },\\n      {\\n        Header: 'Famous For',\\n        accessor: 'famous_for',\\n      },\\n      {\\n        Header: 'Coat Color',\\n        accessor: 'color',\\n        Filter: CheckboxFilter,\\n        filter: 'includesValue',\\n        filterChoices: [{\\n          name: 'russian white',\\n          number: 1,\\n          value: 'russian white',\\n        },\\n        {\\n          name: 'orange tabby',\\n          number: 2,\\n          value: 'orange tabby',\\n        },\\n        {\\n          name: 'brown tabby',\\n          number: 3,\\n          value: 'brown tabby',\\n        },\\n        {\\n          name: 'siamese',\\n          number: 1,\\n          value: 'siamese',\\n        }]\\n      },\\n    ]}\\n  >\\n    <DataTable.TableControlBar />\\n    <DataTable.Table />\\n    <DataTable.EmptyTable content=\\\"No results found\\\" />\\n    <DataTable.TableFooter />\\n  </DataTable>\\n\")), mdx(\"h2\", {\n    \"id\": \"backend-filtering-and-sorting\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#backend-filtering-and-sorting\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Backend filtering and sorting\"), mdx(\"p\", null, \"For larger tables, it may make sense to do filtering, pagination and sorting on the backend.\\nThe user must pass a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fetchData\"), \" function, which will be called when the filtering, sorting, or pagination\\ndata changes. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"manualFilters\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"manualPagination\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"manualSortBy\"), \" props may also be needed.\"), mdx(\"p\", null, \"When \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fetchData\"), \" is called, it is given the necessary data to send a backend API request using the appropriate filters, page number, and/or ordering parameter. Once the request resolves, be sure to update the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" prop to reflect the updated data.\"), mdx(\"h3\", {\n    \"id\": \"paginated-selection\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#paginated-selection\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Paginated selection\"), mdx(\"p\", null, \"To enable proper selection behavior with backend pagination (i.e., when \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isSelectable\"), \" is provided), for both individual rows and bulk actions, the controlled selection status and controlled select components must be used. When used, these components keep track of a user's row selections in a React context provider such that they persist during pagination, even when only 1 page of data is known at any given time. The following components must be used, as shown in the below example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DataTable.ControlledSelectionStatus\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DataTable.ControlledSelectHeader\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DataTable.ControlledSelect\"))), mdx(\"strong\", null, \"NOTE:\"), \" While the below example doesn't demonstrate using true backend filtering, pagination, and sorting, it does mock the behavior of making an asynchronous API request and updating the table data.\", mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"() => {\\n  const PAGINATED_DATA = [\\n    [\\n      {\\n        id: '2baf70d1-42bb-4437-b551-e5fed5a87abe',\\n        title: 'Castle in the Sky',\\n        director: 'Hayao Miyazaki',\\n        producer: 'Isao Takahata',\\n        release_date: 1986,\\n        rt_score: 95,\\n      }, {\\n        id: '12cfb892-aac0-4c5b-94af-521852e46d6a',\\n        title: 'Grave of the Fireflies',\\n        director: 'Isao Takahata',\\n        producer: 'Toru Hara',\\n        release_date: 1988,\\n        rt_score: 97,\\n      },\\n      {\\n        id: '58611129-2dbc-4a81-a72f-77ddfc1b1b49',\\n        title: 'My Neighbor Totoro',\\n        director: 'Hayao Miyazaki',\\n        producer: 'Hayao Miyazaki',\\n        release_date: 1988,\\n        rt_score: 93,\\n      },\\n    ],\\n    [\\n      {\\n        id: 'ea660b10-85c4-4ae3-8a5f-41cea3648e3e',\\n        title: 'Kiki\\\\'s Delivery Service',\\n        director: 'Hayao Miyazaki',\\n        producer: 'Hayao Miyazaki',\\n        release_date: 1989,\\n        rt_score: 96,\\n      },\\n      {\\n        id: '4e236f34-b981-41c3-8c65-f8c9000b94e7',\\n        title: 'Only Yesterday',\\n        director: 'Isao Takahata',\\n        producer: 'Toshio Suzuki',\\n        release_date: 1991,\\n        rt_score: 100,\\n      },\\n      {\\n        id: 'ebbb6b7c-945c-41ee-a792-de0e43191bd8',\\n        title: 'Porco Rosso',\\n        director: 'Hayao Miyazaki',\\n        producer: 'Toshio Suzuki',\\n        release_date: 1992,\\n        rt_score: 94,\\n      },\\n    ],\\n    [\\n      {\\n        id: '1b67aa9a-2e4a-45af-ac98-64d6ad15b16c',\\n        title: 'Pom Poko',\\n        director: 'Isao Takahata',\\n        producer: 'Toshio Suzuki',\\n        release_date: 1994,\\n        rt_score: 78,\\n      },\\n    ],\\n  ];\\n  const [data, setData] = useState(PAGINATED_DATA[0]);\\n  const fetchData = useCallback(\\n    (args) => {\\n      setTimeout(() => {\\n        setData(PAGINATED_DATA[args.pageIndex]);\\n      }, 1000);\\n    },\\n    [],\\n  );\\n\\n  const selectColumn = {\\n    id: 'selection',\\n    Header: DataTable.ControlledSelectHeader,\\n    Cell: DataTable.ControlledSelect,\\n    disableSortBy: true,\\n  };\\n  return (\\n    <DataTable\\n      isSelectable\\n      manualSelectColumn={selectColumn}\\n      SelectionStatusComponent={DataTable.ControlledSelectionStatus}\\n      isFilterable\\n      manualFilters\\n      defaultColumnValues={{ Filter: TextFilter }}\\n      isPaginated\\n      manualPagination\\n      isSortable\\n      manualSortBy\\n      initialState={{\\n        pageSize: 3,\\n        pageIndex: 0\\n      }}\\n      initialTableOptions={{\\n        getRowId: row => row.id,\\n      }}\\n      itemCount={7}\\n      pageCount={3}\\n      fetchData={fetchData}\\n      data={data}\\n      columns={[\\n        {\\n          Header: 'Title',\\n          accessor: 'title',\\n        },\\n        {\\n          Header: 'Director',\\n          accessor: 'director',\\n        },\\n        {\\n          Header: 'Release date',\\n          accessor: 'release_date',\\n        },\\n      ]}\\n      bulkActions={[\\n        {\\n          buttonText: 'Download CSV',\\n          handleClick: (data) => console.log('Download CSV', data),\\n        },\\n        // custom button function that utilizes clearSelection function provided by the table instance\\n        ({tableInstance})=>{\\n          return {\\n            buttonText: `Clear Selection`,\\n            handleClick: () => {\\n              console.log('Clear selection');\\n              tableInstance.clearSelection()\\n            },\\n          }\\n        },\\n      ]}\\n    />\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"view-switching\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#view-switching\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"View Switching\"), mdx(\"p\", null, \"Card view is default when \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isDataViewToggleEnabled\"), \" is true\"), mdx(\"p\", null, \"See \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dataViewToggleOptions\"), \" props documentation for all supported props\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"function() {\\n  const [currentView, setCurrentView] = useState('card');\\n  const togglePlacement = 'left'; // 'bottom' is the only other supported value\\n  return (\\n    <DataTable\\n      isFilterable\\n      dataViewToggleOptions={{\\n        isDataViewToggleEnabled: true,\\n        onDataViewToggle: val => setCurrentView(val),\\n        togglePlacement,\\n      }}\\n      isSortable\\n      defaultColumnValues={{ Filter: TextFilter }}\\n      itemCount={7}\\n      data={[\\n        {\\n          name: 'Lil Bub',\\n          color: 'brown tabby',\\n          famous_for: 'weird tongue',\\n        },\\n        {\\n          name: 'Grumpy Cat',\\n          color: 'siamese',\\n          famous_for: 'serving moods',\\n        },\\n        {\\n          name: 'Smoothie',\\n          color: 'orange tabby',\\n          famous_for: 'modeling',\\n        },\\n      ]}\\n      columns={[\\n        {\\n          Header: 'Name',\\n          accessor: 'name',\\n\\n        },\\n        {\\n          Header: 'Famous For',\\n          accessor: 'famous_for',\\n        },\\n        {\\n          Header: 'Coat Color',\\n          accessor: 'color',\\n          Filter: CheckboxFilter,\\n          filter: 'includesValue',\\n          filterChoices: [{\\n            name: 'russian white',\\n            number: 1,\\n            value: 'russian white',\\n          },\\n          {\\n            name: 'orange tabby',\\n            number: 2,\\n            value: 'orange tabby',\\n          },\\n          {\\n            name: 'brown tabby',\\n            number: 3,\\n            value: 'brown tabby',\\n          },\\n          {\\n            name: 'siamese',\\n            number: 1,\\n            value: 'siamese',\\n          }]\\n        },\\n      ]}\\n    >\\n      <DataTable.TableControlBar />\\n\\n      {/* which kind of body content to show */}\\n      { currentView === \\\"card\\\" && <CardView CardComponent={MiyazakiCard} /> }\\n      { currentView === \\\"list\\\" && <DataTable.Table /> }\\n\\n      <DataTable.EmptyTable content=\\\"No results found\\\" />\\n      <DataTable.TableFooter />\\n    </DataTable>\\n  )\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"with-a-default-active-state-specified\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-a-default-active-state-specified\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With a default active state specified\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"function() {\\n  const defaultVal = \\\"list\\\";\\n  const [currentView, setCurrentView] = useState(defaultVal);\\n  return (\\n    <DataTable\\n      isFilterable\\n      dataViewToggleOptions={{\\n        isDataViewToggleEnabled: true,\\n        onDataViewToggle: val => setCurrentView(val),\\n        defaultActiveStateValue: defaultVal,\\n      }}\\n      isSortable\\n      defaultColumnValues={{ Filter: TextFilter }}\\n      itemCount={7}\\n      data={[\\n        {\\n          name: 'Lil Bub',\\n          color: 'brown tabby',\\n          famous_for: 'weird tongue',\\n        },\\n        {\\n          name: 'Grumpy Cat',\\n          color: 'siamese',\\n          famous_for: 'serving moods',\\n        },\\n        {\\n          name: 'Smoothie',\\n          color: 'orange tabby',\\n          famous_for: 'modeling',\\n        },\\n      ]}\\n      columns={[\\n        {\\n          Header: 'Name',\\n          accessor: 'name',\\n\\n        },\\n        {\\n          Header: 'Famous For',\\n          accessor: 'famous_for',\\n        },\\n        {\\n          Header: 'Coat Color',\\n          accessor: 'color',\\n          Filter: CheckboxFilter,\\n          filter: 'includesValue',\\n          filterChoices: [{\\n            name: 'russian white',\\n            number: 1,\\n            value: 'russian white',\\n          },\\n          {\\n            name: 'orange tabby',\\n            number: 2,\\n            value: 'orange tabby',\\n          },\\n          {\\n            name: 'brown tabby',\\n            number: 3,\\n            value: 'brown tabby',\\n          },\\n          {\\n            name: 'siamese',\\n            number: 1,\\n            value: 'siamese',\\n          }]\\n        },\\n      ]}\\n    >\\n      <DataTable.TableControlBar />\\n\\n      {/* which kind of body content to show */}\\n      { currentView === \\\"card\\\" && <CardView CardComponent={MiyazakiCard} /> }\\n      { currentView === \\\"list\\\" && <DataTable.Table /> }\\n\\n      <DataTable.EmptyTable content=\\\"No results found\\\" />\\n      <DataTable.TableFooter />\\n    </DataTable>\\n  )\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"loading-state\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#loading-state\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Loading state\"), mdx(\"p\", null, \"Can be used to show the loading state when DataTable fetching new data.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"() => {\\n  const PAGINATED_DATA = [\\n    [\\n      {\\n        id: '2baf70d1-42bb-4437-b551-e5fed5a87abe',\\n        title: 'Castle in the Sky',\\n        director: 'Hayao Miyazaki',\\n        producer: 'Isao Takahata',\\n        release_date: 1986,\\n        rt_score: 95,\\n      }, {\\n        id: '12cfb892-aac0-4c5b-94af-521852e46d6a',\\n        title: 'Grave of the Fireflies',\\n        director: 'Isao Takahata',\\n        producer: 'Toru Hara',\\n        release_date: 1988,\\n        rt_score: 97,\\n      },\\n      {\\n        id: '58611129-2dbc-4a81-a72f-77ddfc1b1b49',\\n        title: 'My Neighbor Totoro',\\n        director: 'Hayao Miyazaki',\\n        producer: 'Hayao Miyazaki',\\n        release_date: 1988,\\n        rt_score: 93,\\n      },\\n    ],\\n    [\\n      {\\n        id: 'ea660b10-85c4-4ae3-8a5f-41cea3648e3e',\\n        title: 'Kiki\\\\'s Delivery Service',\\n        director: 'Hayao Miyazaki',\\n        producer: 'Hayao Miyazaki',\\n        release_date: 1989,\\n        rt_score: 96,\\n      },\\n      {\\n        id: '4e236f34-b981-41c3-8c65-f8c9000b94e7',\\n        title: 'Only Yesterday',\\n        director: 'Isao Takahata',\\n        producer: 'Toshio Suzuki',\\n        release_date: 1991,\\n        rt_score: 100,\\n      },\\n      {\\n        id: 'ebbb6b7c-945c-41ee-a792-de0e43191bd8',\\n        title: 'Porco Rosso',\\n        director: 'Hayao Miyazaki',\\n        producer: 'Toshio Suzuki',\\n        release_date: 1992,\\n        rt_score: 94,\\n      },\\n    ],\\n    [\\n      {\\n        id: '1b67aa9a-2e4a-45af-ac98-64d6ad15b16c',\\n        title: 'Pom Poko',\\n        director: 'Isao Takahata',\\n        producer: 'Toshio Suzuki',\\n        release_date: 1994,\\n        rt_score: 78,\\n      },\\n    ],\\n  ];\\n  const [data, setData] = useState(PAGINATED_DATA[0]);\\n  const fetchData = useCallback(\\n    (args) => {\\n      setTimeout(() => {\\n        setData(PAGINATED_DATA[args.pageIndex]);\\n      }, 1000);\\n    },\\n    [],\\n  );\\n\\n  const selectColumn = {\\n    id: 'selection',\\n    Header: DataTable.ControlledSelectHeader,\\n    Cell: DataTable.ControlledSelect,\\n    disableSortBy: true,\\n  };\\n  return (\\n    <DataTable\\n      isLoading\\n      isSelectable\\n      manualSelectColumn={selectColumn}\\n      SelectionStatusComponent={DataTable.ControlledSelectionStatus}\\n      isFilterable\\n      manualFilters\\n      defaultColumnValues={{ Filter: TextFilter }}\\n      isPaginated\\n      manualPagination\\n      isSortable\\n      manualSortBy\\n      initialState={{\\n        pageSize: 3,\\n        pageIndex: 0\\n      }}\\n      initialTableOptions={{\\n        getRowId: row => row.id,\\n      }}\\n      itemCount={7}\\n      pageCount={3}\\n      fetchData={fetchData}\\n      data={data}\\n      columns={[\\n        {\\n          Header: 'Title',\\n          accessor: 'title',\\n        },\\n        {\\n          Header: 'Director',\\n          accessor: 'director',\\n        },\\n        {\\n          Header: 'Release date',\\n          accessor: 'release_date',\\n        },\\n      ]}\\n      bulkActions={[\\n        {\\n          buttonText: 'Download CSV',\\n          handleClick: (data) => console.log('Download CSV', data),\\n        },\\n        // custom button function that utilizes clearSelection function provided by the table instance\\n        ({tableInstance})=>{\\n          return {\\n            buttonText: `Clear Selection`,\\n            handleClick: () => {\\n              console.log('Clear selection');\\n              tableInstance.clearSelection()\\n            }, \\n          }\\n        },\\n      ]}\\n    />\\n  );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"actions-table-actions-and-bulk-actions\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#actions-table-actions-and-bulk-actions\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Actions, Table actions and Bulk actions\"), mdx(\"p\", null, \"Actions and bulk actions are actions that are performed on table rows, though bulk actions can be used for\\nactions that apply to the whole table. It is up to the user to determine what the action does.\"), mdx(\"h3\", {\n    \"id\": \"table-actions\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#table-actions\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Table Actions\"), mdx(\"p\", null, \"Table actions are actions that are enacted on the entire table. Their click handler is called with the react-table\\ninstance.\\nThe first two table actions will be displayed as buttons, while the remaining actions will be displayed in an overflow\\ndropdown menu.\\nTable actions are not visible if bulk actions are available and there  are selected rows.\"), mdx(\"h3\", {\n    \"id\": \"bulk-actions\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#bulk-actions\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Bulk Actions\"), mdx(\"p\", null, \"Bulk actions are action that are enacted on specific table rows. The bulk action click handler is called with the selected rows.\\nThe first two bulk actions will be displayed as buttons, while the remaining bulk actions will be displayed in a\\noverflow dropdown menu.\\nBulk actions are not visible unless rows have been selected.\"), mdx(\"h3\", {\n    \"id\": \"actions\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#actions\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Actions\"), mdx(\"p\", null, \"An action can also be defined as an additional column on the table. The Cell property can be defined to display\\nany component that a user requires. It will receive the row as props.\\nYou can pass a function to render custom components for bulk actions and table actions.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"  <DataTable\\n    isSelectable\\n    itemCount={7}\\n    tableActions={[\\n        {\\n          buttonText: 'Table Action',\\n          handleClick: (data) => console.log('Table Action', data),\\n        },\\n    ]}\\n    bulkActions={[\\n        // Function defined button\\n        ({selectedFlatRows})=>{\\n          return {\\n            buttonText: `Enroll (${selectedFlatRows.length})`,\\n            handleClick: () => console.log('Enroll', selectedFlatRows),\\n          }\\n        },\\n        {\\n          buttonText: 'Assign',\\n          handleClick: (data) => console.log('Assign', data),\\n        },\\n        {\\n          buttonText: 'Extra action 1',\\n          handleClick: (data) => console.log('Extra action 1', data),\\n        },\\n        {\\n          buttonText: 'Extra action 2',\\n          handleClick: (data) => console.log('Extra action 2', data),\\n        },\\n      ]}\\n    additionalColumns={[\\n      {\\n        id: 'action',\\n        Header: 'Action',\\n        Cell: ({ row }) => <Button variant=\\\"link\\\" onClick={() => console.log(`Assigning ${row.values.name}`)}>Assign</Button>,\\n      }\\n    ]}\\n    data={[\\n      {\\n        name: 'Lil Bub',\\n        color: 'brown tabby',\\n        famous_for: 'weird tongue',\\n      },\\n      {\\n        name: 'Grumpy Cat',\\n        color: 'siamese',\\n        famous_for: 'serving moods',\\n      },\\n      {\\n        name: 'Smoothie',\\n        color: 'orange tabby',\\n        famous_for: 'modeling',\\n      },\\n      {\\n        name: 'Maru',\\n        color: 'brown tabby',\\n        famous_for: 'being a lovable oaf',\\n      },\\n      {\\n        name: 'Keyboard Cat',\\n        color: 'orange tabby',\\n        famous_for: 'piano virtuoso',\\n      },\\n      {\\n        name: 'Long Cat',\\n        color: 'russian white',\\n        famous_for:\\n          'being loooooooooooooooooooooooooooooooooooooooooooooooooooooong',\\n      },\\n      {\\n        name: 'Zeno',\\n        color: 'brown tabby',\\n        famous_for: 'getting halfway there'\\n      },\\n    ]}\\n    columns={[\\n      {\\n        Header: 'Name',\\n        accessor: 'name',\\n\\n      },\\n      {\\n        Header: 'Famous For',\\n        accessor: 'famous_for',\\n      },\\n      {\\n        Header: 'Coat Color',\\n        accessor: 'color',\\n      },\\n    ]}\\n  >\\n    <DataTable.TableControlBar />\\n    <DataTable.Table />\\n    <DataTable.EmptyTable content=\\\"No results found\\\" />\\n    <DataTable.TableFooter />\\n  </DataTable>\\n\")), mdx(\"h4\", {\n    \"id\": \"actions-with-data-view-toggle-enabled\"\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#actions-with-data-view-toggle-enabled\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Actions with Data view toggle enabled\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"function() {\\n    const [currentView, setCurrentView] = useState('card');\\n\\n  return (<DataTable\\n            dataViewToggleOptions={{\\n              isDataViewToggleEnabled: true,\\n              onDataViewToggle: val => setCurrentView(val),\\n              defaultActiveStateValue: \\\"card\\\",\\n            }}\\n            isSelectable\\n            itemCount={7}\\n            tableActions={[\\n                {\\n                  buttonText: 'Table Action',\\n                  handleClick: (data) => console.log('Table Action', data),\\n                },\\n            ]}\\n            bulkActions={[\\n                // Function defined button\\n                ({selectedFlatRows})=>{\\n                  return {\\n                    buttonText: `Enroll (${selectedFlatRows.length})`,\\n                    handleClick: () => console.log('Enroll', selectedFlatRows),\\n                  }\\n                },\\n                {\\n                  buttonText: 'Assign',\\n                  handleClick: (data) => console.log('Assign', data),\\n                },\\n                {\\n                  buttonText: 'Extra action 1',\\n                  handleClick: (data) => console.log('Extra action 1', data),\\n                },\\n                {\\n                  buttonText: 'Extra action 2',\\n                  handleClick: (data) => console.log('Extra action 2', data),\\n                },\\n              ]}\\n            additionalColumns={[\\n              {\\n                id: 'action',\\n                Header: 'Action',\\n                Cell: ({ row }) => <Button variant=\\\"link\\\" onClick={() => console.log(`Assigning ${row.values.name}`)}>Assign</Button>,\\n              }\\n            ]}\\n            data={[\\n              {\\n                name: 'Lil Bub',\\n                color: 'brown tabby',\\n                famous_for: 'weird tongue',\\n              },\\n              {\\n                name: 'Grumpy Cat',\\n                color: 'siamese',\\n                famous_for: 'serving moods',\\n              },\\n              {\\n                name: 'Smoothie',\\n                color: 'orange tabby',\\n                famous_for: 'modeling',\\n              },\\n              {\\n                name: 'Maru',\\n                color: 'brown tabby',\\n                famous_for: 'being a lovable oaf',\\n              },\\n              {\\n                name: 'Keyboard Cat',\\n                color: 'orange tabby',\\n                famous_for: 'piano virtuoso',\\n              },\\n              {\\n                name: 'Long Cat',\\n                color: 'russian white',\\n                famous_for:\\n                  'being loooooooooooooooooooooooooooooooooooooooooooooooooooooong',\\n              },\\n              {\\n                name: 'Zeno',\\n                color: 'brown tabby',\\n                famous_for: 'getting halfway there'\\n              },\\n            ]}\\n            columns={[\\n              {\\n                Header: 'Name',\\n                accessor: 'name',\\n\\n              },\\n              {\\n                Header: 'Famous For',\\n                accessor: 'famous_for',\\n              },\\n              {\\n                Header: 'Coat Color',\\n                accessor: 'color',\\n              },\\n            ]}\\n          >\\n            <DataTable.TableControlBar />\\n            {/* which kind of body content to show */}\\n            { currentView === \\\"card\\\" && <CardView CardComponent={MiyazakiCard} /> }\\n            { currentView === \\\"list\\\" && <DataTable.Table /> }\\n            <DataTable.EmptyTable content=\\\"No results found\\\" />\\n            <DataTable.TableFooter />\\n          </DataTable>\\n          );\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"cardview-and-alternate-table-components\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#cardview-and-alternate-table-components\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"CardView and alternate table components\"), mdx(\"p\", null, \"You may choose to use any table component by using the following code in your display component:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const instance = useContext(DataTableContext)\\n\")), mdx(\"p\", null, \"The CardView takes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CardComponent\"), \" that is personalized to the table in question and displays\\na responsive grid of cards.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<DataTable\\n  isFilterable\\n  defaultColumnValues={{ Filter: TextFilter }}\\n  isPaginated\\n  isSortable\\n  initialState={{\\n    pageSize: 3,\\n    pageIndex: 0\\n  }}\\n  itemCount={20}\\n  fetchData={(data) => console.log(`This function will be called with the value: ${JSON.stringify(data)}}`)}\\n  data={[\\n  {\\n    'id': '2baf70d1-42bb-4437-b551-e5fed5a87abe',\\n    'title': 'Castle in the Sky',\\n    'director': 'Hayao Miyazaki',\\n    'producer': 'Isao Takahata',\\n    'release_date': '1986',\\n    'rt_score': '95',\\n  },\\n  {\\n    'id': '12cfb892-aac0-4c5b-94af-521852e46d6a',\\n    'title': 'Grave of the Fireflies',\\n    'director': 'Isao Takahata',\\n    'producer': 'Toru Hara',\\n    'release_date': '1988',\\n    'rt_score': '97',\\n  },\\n  {\\n    'id': '58611129-2dbc-4a81-a72f-77ddfc1b1b49',\\n    'title': 'My Neighbor Totoro',\\n    'director': 'Hayao Miyazaki',\\n    'producer': 'Hayao Miyazaki',\\n    'release_date': '1988',\\n    'rt_score': '93',\\n  },\\n  {\\n    'id': 'ea660b10-85c4-4ae3-8a5f-41cea3648e3e',\\n    'title': 'Kiki\\\\'s Delivery Service',\\n    'director': 'Hayao Miyazaki',\\n    'producer': 'Hayao Miyazaki',\\n    'release_date': '1989',\\n    'rt_score': '96',\\n  },\\n  {\\n    'id': '4e236f34-b981-41c3-8c65-f8c9000b94e7',\\n    'title': 'Only Yesterday',\\n    'director': 'Isao Takahata',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '1991',\\n    'rt_score': '100',\\n  },\\n  {\\n    'id': 'ebbb6b7c-945c-41ee-a792-de0e43191bd8',\\n    'title': 'Porco Rosso',\\n    'director': 'Hayao Miyazaki',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '1992',\\n    'rt_score': '94',\\n  },\\n  {\\n    'id': '1b67aa9a-2e4a-45af-ac98-64d6ad15b16c',\\n    'title': 'Pom Poko',\\n    'director': 'Isao Takahata',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '1994',\\n    'rt_score': '78',\\n  },\\n  {\\n    'id': 'ff24da26-a969-4f0e-ba1e-a122ead6c6e3',\\n    'title': 'Whisper of the Heart',\\n    'director': 'Yoshifumi Kond\\u014D',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '1995',\\n    'rt_score': '91',\\n  },\\n  {\\n    'id': '0440483e-ca0e-4120-8c50-4c8cd9b965d6',\\n    'title': 'Princess Mononoke',\\n    'director': 'Hayao Miyazaki',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '1997',\\n    'rt_score': '92',\\n  },\\n  {\\n    'id': '45204234-adfd-45cb-a505-a8e7a676b114',\\n    'title': 'My Neighbors the Yamadas',\\n    'director': 'Isao Takahata',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '1999',\\n    'rt_score': '75',\\n  },\\n  {\\n    'id': 'dc2e6bd1-8156-4886-adff-b39e6043af0c',\\n    'title': 'Spirited Away',\\n    'director': 'Hayao Miyazaki',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '2001',\\n    'rt_score': '97',\\n  },\\n  {\\n    'id': '90b72513-afd4-4570-84de-a56c312fdf81',\\n    'title': 'The Cat Returns',\\n    'director': 'Hiroyuki Morita',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '2002',\\n    'rt_score': '89',\\n  },\\n  {\\n    'id': 'cd3d059c-09f4-4ff3-8d63-bc765a5184fa',\\n    'title': 'Howl\\\\'s Moving Castle',\\n    'director': 'Hayao Miyazaki',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '2004',\\n    'rt_score': '87',\\n  },\\n  {\\n    'id': '112c1e67-726f-40b1-ac17-6974127bb9b9',\\n    'title': 'Tales from Earthsea',\\n    'director': 'Gor\\u014D Miyazaki',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '2006',\\n    'rt_score': '41',\\n  },\\n  {\\n    'id': '758bf02e-3122-46e0-884e-67cf83df1786',\\n    'title': 'Ponyo',\\n    'director': 'Hayao Miyazaki',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '2008',\\n    'rt_score': '92',\\n  },\\n  {\\n    'id': '2de9426b-914a-4a06-a3a0-5e6d9d3886f6',\\n    'title': 'Arrietty',\\n    'director': 'Hiromasa Yonebayashi',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '2010',\\n    'rt_score': '95',\\n  },\\n  {\\n    'id': '45db04e4-304a-4933-9823-33f389e8d74d',\\n    'title': 'From Up on Poppy Hill',\\n    'director': 'Gor\\u014D Miyazaki',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '2011',\\n    'rt_score': '83',\\n  },\\n  {\\n    'id': '67405111-37a5-438f-81cc-4666af60c800',\\n    'title': 'The Wind Rises',\\n    'director': 'Hayao Miyazaki',\\n    'producer': 'Toshio Suzuki',\\n    'release_date': '2013',\\n    'rt_score': '89',\\n  },\\n  {\\n    'id': '578ae244-7750-4d9f-867b-f3cd3d6fecf4',\\n    'title': 'The Tale of the Princess Kaguya',\\n    'director': 'Isao Takahata',\\n    'producer': 'Yoshiaki Nishimura',\\n    'release_date': '2013',\\n    'rt_score': '100',\\n  },\\n  {\\n    'id': '5fdfb320-2a02-49a7-94ff-5ca418cae602',\\n    'title': 'When Marnie Was There',\\n    'director': 'Hiromasa Yonebayashi',\\n    'producer': 'Yoshiaki Nishimura',\\n    'release_date': '2014',\\n    'rt_score': '92',\\n  }\\n]}\\n  columns={[\\n    {\\n      Header: 'Title',\\n      accessor: 'title',\\n\\n    },\\n    {\\n      Header: 'Director',\\n      accessor: 'director',\\n    },\\n    {\\n      Header: 'Release date',\\n      accessor: 'release_date',\\n    },\\n  ]}\\n  bulkActions={[\\n    {\\n      buttonText: 'Download CSV',\\n      handleClick: (data) => console.log('Download CSV ', data),\\n    },\\n  ]}\\n>\\n  <TableControlBar />\\n  <CardView CardComponent={MiyazakiCard} />\\n  <TableFooter />\\n</DataTable>\\n\")), mdx(\"h2\", {\n    \"id\": \"sidebar-filter\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#sidebar-filter\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Sidebar Filter\"), mdx(\"p\", null, \"For a more desktop friendly view, you can move filters into a sidebar by providing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"showFiltersInSidebar\"), \" prop, try it out!\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"  <DataTable\\n    showFiltersInSidebar\\n    isFilterable\\n    isSortable\\n    defaultColumnValues={{ Filter: TextFilter }}\\n    itemCount={5}\\n    data={[\\n      {\\n        name: 'Lil Bub',\\n        color: 'brown tabby',\\n        famous_for: 'weird tongue',\\n      },\\n      {\\n        name: 'Grumpy Cat',\\n        color: 'siamese',\\n        famous_for: 'serving moods',\\n      },\\n      {\\n        name: 'Smoothie',\\n        color: 'orange tabby',\\n        famous_for: 'modeling',\\n      },\\n      {\\n        name: 'Maru',\\n        color: 'brown tabby',\\n        famous_for: 'being a lovable oaf',\\n      },\\n      {\\n        name: 'Keyboard Cat',\\n        color: 'orange tabby',\\n        famous_for: 'piano virtuoso',\\n      }\\n    ]}\\n    columns={[\\n      {\\n        Header: 'Name',\\n        accessor: 'name',\\n\\n      },\\n      {\\n        Header: 'Famous For',\\n        accessor: 'famous_for',\\n      },\\n      {\\n        Header: 'Coat Color',\\n        accessor: 'color',\\n        Filter: CheckboxFilter,\\n        filter: 'includesValue',\\n        filterChoices: [{\\n          name: 'russian white',\\n          number: 1,\\n          value: 'russian white',\\n        },\\n        {\\n          name: 'orange tabby',\\n          number: 2,\\n          value: 'orange tabby',\\n        },\\n        {\\n          name: 'brown tabby',\\n          number: 3,\\n          value: 'brown tabby',\\n        },\\n        {\\n          name: 'siamese',\\n          number: 1,\\n          value: 'siamese',\\n        }]\\n      },\\n    ]}\\n  >\\n    <DataTable.TableControlBar />\\n    <DataTable.Table />\\n    <DataTable.EmptyTable content=\\\"No results found\\\" />\\n    <DataTable.TableFooter />\\n  </DataTable>\\n\")), mdx(\"h3\", {\n    \"id\": \"expandable-rows\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#expandable-rows\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Expandable rows\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DataTable\"), \" supports expandable rows which once expanded render additional content under the row. Displayed content\\nis controlled by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"renderRowSubComponent\"), \" prop, which is a function that receives \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"row\"), \" as its single prop and renders expanded view, you also\\nneed to pass \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isEpandable\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DataTable\"), \" to indicate that it should support expand behavior for rows.\\nFinally, an additional column is required to be included into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"columns\"), \" prop which will contain handlers for expand / collapse behavior, see examples below. \"), mdx(\"h4\", {\n    \"id\": \"default-view\"\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#default-view\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Default view\"), mdx(\"p\", null, \"Here we use default expander column offered by Paragon and for each row render value of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" attribute as its subcomponent.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<DataTable \\n  isExpandable\\n  itemCount={7}\\n  renderRowSubComponent={({ row }) => <div className='text-center'>{row.values.name}</div>}\\n  data={[\\n    {\\n      name: 'Lil Bub',\\n      color: 'brown tabby',\\n      famous_for: 'weird tongue',\\n    },\\n    {\\n      name: 'Grumpy Cat',\\n      color: 'siamese',\\n      famous_for: 'serving moods',\\n    },\\n    {\\n      name: 'Smoothie',\\n      color: 'orange tabby',\\n      famous_for: 'modeling',\\n    },\\n    {\\n      name: 'Maru',\\n      color: 'brown tabby',\\n      famous_for: 'being a lovable oaf',\\n    },\\n    {\\n      name: 'Keyboard Cat',\\n      color: 'orange tabby',\\n      famous_for: 'piano virtuoso',\\n    },\\n    {\\n      name: 'Long Cat',\\n      color: 'russian white',\\n      famous_for: 'being loooooooooooooooooooooooooooooooooooooooooooooooooooooong',\\n    },\\n    {\\n      name: 'Zeno',\\n      color: 'brown tabby',\\n      famous_for: 'getting halfway there'\\n    },\\n  ]}\\n  columns={[\\n    {\\n      id: 'expander',\\n      Header: DataTable.ExpandAll,\\n      Cell: DataTable.ExpandRow,\\n    },\\n    {\\n      Header: 'Name',\\n      accessor: 'name',\\n    },\\n    {\\n      Header: 'Famous For',\\n      accessor: 'famous_for',\\n    },\\n    {\\n      Header: 'Coat Color',\\n      accessor: 'color',\\n    },\\n  ]}\\n>\\n  <DataTable.TableControlBar />\\n  <DataTable.Table />\\n  <DataTable.TableFooter />\\n</DataTable>\\n\")), mdx(\"h4\", {\n    \"id\": \"with-custom-expander-column\"\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#with-custom-expander-column\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With custom expander column\"), mdx(\"p\", null, \"You can create your own custom expander column and use it, see code example below.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"() => {\\n  const expanderColumn = {\\n    id: 'expander',\\n    // getToggleAllRowsExpandedProps and isAllRowsExpanded props will be automatically passed to the component\\n    Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\\n      <span {...getToggleAllRowsExpandedProps()}>\\n        {isAllRowsExpanded ? <Remove /> : <Add />}\\n      </span>\\n    ),\\n    // Cell will receive row prop\\n    Cell: ({ row }) => (\\n      <span {...row.getToggleRowExpandedProps()}>\\n        {row.isExpanded ? 'Collapse' : 'Expand'}\\n      </span>\\n    ),\\n  };\\n\\n  const currentDate = new Date().toDateString();\\n\\n  const renderSubComponent = ({ row }) => (\\n    <div className=\\\"ml-5 w-50\\\">\\n      <DataTable\\n        itemCount={1}\\n        data={[\\n          {...row.original},\\n        ]}\\n        columns={[\\n          {\\n            Header: 'Date modified',\\n            accessor: 'date_modified',\\n          },\\n          {\\n            Header: 'Modified by',\\n            accessor: 'modified_by',\\n          },\\n          {\\n            Header: 'Reason',\\n            accessor: 'reason',\\n          },\\n        ]}\\n      >\\n        <DataTable.Table/>\\n      </DataTable>\\n    </div>\\n  )\\n    \\n  return (\\n    <DataTable\\n      isExpandable \\n      renderRowSubComponent={renderSubComponent}\\n      itemCount={3}\\n      data={[\\n        {\\n          name: 'Lil Bub',\\n          color: 'brown tabby',\\n          famous_for: 'weird tongue',\\n          date_modified: currentDate,\\n          modified_by: 'Jane Doe',\\n          reason: 'Unknown',\\n        },\\n        {\\n          name: 'Grumpy Cat',\\n          color: 'siamese',\\n          famous_for: 'serving moods',\\n          date_modified: currentDate,\\n          modified_by: 'Jane Doe',\\n          reason: 'Felt like it',\\n        },\\n        {\\n          name: 'Smoothie', \\n          color: 'orange tabby',\\n          famous_for: 'modeling',\\n          date_modified: currentDate,\\n          modified_by: 'Jane Doe',\\n          reason: 'Felt like it',\\n        },\\n      ]}\\n      columns={[\\n        { ...expanderColumn },\\n        {\\n          Header: 'Name',\\n          accessor: 'name',\\n        },\\n        {\\n          Header: 'Famous For',\\n          accessor: 'famous_for',\\n        },\\n        {\\n          Header: 'Coat Color',\\n          accessor: 'color',\\n        },\\n      ]}\\n    >\\n      <DataTable.TableControlBar/>\\n      <DataTable.Table/>\\n      <DataTable.TableFooter/>\\n    </DataTable>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"DataTable","status":"New","notes":null,"components":["DataTable","DataViewToggle","BulkActions","TableActions","Table","CardView","TableCell","TableHeaderCell","TableHeaderRow","TableRow","FilterStatus","SelectionStatus","RowStatus","SmartStatus","TablePagination","TextFilter"]}},"components":{"nodes":[{"displayName":"BulkActions","props":[{"defaultValue":{"value":"null"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"class names for the div wrapping the button components","doclets":[],"description":{"id":"765b0b54-5c46-50dc-a334-067050150d7f","text":"class names for the div wrapping the button components","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"class names for the div wrapping the button components\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"CardView","props":[{"defaultValue":{"value":"''"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"The class name for the CardGrid component","doclets":[],"description":{"id":"c6d7ff33-ddb4-57a0-9007-1f34cf43a00e","text":"The class name for the CardGrid component","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The class name for the CardGrid component\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{\n  xs: 12,\n  lg: 6,\n  xl: 4,\n}"},"name":"columnSizes","type":{"name":"shape","raw":null,"value":{"xs":{"name":"number","required":false},"sm":{"name":"number","required":false},"md":{"name":"number","required":false},"lg":{"name":"number","required":false},"xl":{"name":"number","required":false}}},"required":false,"docblock":"An object containing the desired column size at each breakpoint, following a similar\nprops API as ``react-bootstrap/Col``","doclets":[],"description":{"id":"cc2de859-b376-5328-975b-6b15efeff308","text":"An object containing the desired column size at each breakpoint, following a similar\nprops API as ``react-bootstrap/Col``","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An object containing the desired column size at each breakpoint, following a similar\\nprops API as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-bootstrap/Col\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"CardComponent","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Your card component must be individualized to your table.\nIt will be called with props from the \"row\" of data it will display","doclets":[],"description":{"id":"8feffd28-94f1-58e5-971b-8c938d1d97ce","text":"Your card component must be individualized to your table.\nIt will be called with props from the \"row\" of data it will display","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Your card component must be individualized to your table.\\nIt will be called with props from the \\\"row\\\" of data it will display\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"DataViewToggle","props":[]},{"displayName":"FilterStatus","props":[{"defaultValue":{"value":"null"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"5f88437d-35d8-50eb-8902-9970f345b6ee","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'pgn__smart-status-button'"},"name":"buttonClassName","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"52cb8bb3-0321-57b8-a427-45947c20ce66","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'link'"},"name":"variant","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"88fcd16f-001e-51e6-8ac9-36442742c499","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'inline'"},"name":"size","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"0e82d70d-5aa6-5cff-bbff-55c74bab74b2","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'Clear Filters'"},"name":"clearFiltersText","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"2c283bbe-b33f-5449-9953-1d93aaec7a42","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"true"},"name":"showFilteredFields","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"1438ce6e-7c9a-5c6d-8de2-f1ad3cd29d98","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"RowStatus","props":[{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies class name to append to the base element.","doclets":[],"description":{"id":"23b1f958-8015-5ad6-ae44-9c4c371a0422","text":"Specifies class name to append to the base element.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies class name to append to the base element.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"SmartStatus","props":[]},{"displayName":"Table","props":[{"defaultValue":{"value":"true"},"name":"isStriped","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"should table rows be striped","doclets":[],"description":{"id":"405f1765-72b1-5001-894d-26ab859ea45d","text":"should table rows be striped","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"should table rows be striped\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"TableActions","props":[{"defaultValue":{"value":"null"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"class names for the div wrapping the button components","doclets":[],"description":{"id":"58c30148-8a79-5daf-95c7-a4712412794f","text":"class names for the div wrapping the button components","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"class names for the div wrapping the button components\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"TableCell","props":[{"defaultValue":null,"name":"getCellProps","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Props for the td element","doclets":[],"description":{"id":"db40e927-8979-5697-9c92-74ad7eef6969","text":"Props for the td element","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Props for the td element\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"render","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Function that renders the cell contents. Will be called with the string 'Cell'","doclets":[],"description":{"id":"8ee21bfd-a81e-5f58-9e50-94a5ce7b4b51","text":"Function that renders the cell contents. Will be called with the string 'Cell'","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Function that renders the cell contents. Will be called with the string 'Cell'\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"column","type":{"name":"shape","raw":null,"value":{"cellClassName":{"name":"string","description":"Class(es) to be applied to the cells in the given column","required":false}}},"required":true,"docblock":"Table column","doclets":[],"description":{"id":"2b88adda-4e30-5705-b0d0-cffaf5ca0c8e","text":"Table column","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Table column\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"TableHeaderCell","props":[{"defaultValue":null,"name":"getHeaderProps","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Returns props for the th element","doclets":[],"description":{"id":"ec46a03c-e9f7-5ef4-b46e-605ceec803ad","text":"Returns props for the th element","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Returns props for the th element\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"isSorted","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Indicates whether or not a column is sorted","doclets":[],"description":{"id":"2a573489-06ba-5af2-9610-c75c2ecf28d5","text":"Indicates whether or not a column is sorted","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Indicates whether or not a column is sorted\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"render","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Renders the header content. Passed the string 'Header'","doclets":[],"description":{"id":"94367885-11b5-5504-afda-e1ae1d1f8c4f","text":"Renders the header content. Passed the string 'Header'","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Renders the header content. Passed the string 'Header'\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"isSortedDesc","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Indicates whether the column is sorted in descending order","doclets":[],"description":{"id":"9c7c33da-9b7e-5cee-a407-4f9c7d6a49c1","text":"Indicates whether the column is sorted in descending order","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Indicates whether the column is sorted in descending order\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"() => {}"},"name":"getSortByToggleProps","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Gets props related to sorting that will be passed to th","doclets":[],"description":{"id":"db1a50db-0c04-521a-825a-9b98448acbdf","text":"Gets props related to sorting that will be passed to th","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gets props related to sorting that will be passed to th\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"canSort","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Indicates whether a column is sortable","doclets":[],"description":{"id":"2bada516-6996-57b3-9586-874431e881e6","text":"Indicates whether a column is sortable","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Indicates whether a column is sortable\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"null"},"name":"headerClassName","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Class(es) to be applied to header cells","doclets":[],"description":{"id":"477bb3e2-d4ef-5d83-b385-2c65a3f23d6e","text":"Class(es) to be applied to header cells","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Class(es) to be applied to header cells\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"TableHeaderRow","props":[{"defaultValue":null,"name":"headerGroups","type":{"name":"arrayOf","raw":null,"value":{"name":"shape","value":{"headers":{"name":"arrayOf","value":{"name":"shape","value":{"getHeaderProps":{"name":"func","description":"Props for the TableHeaderCell component. Must include a key","required":true}}},"required":true},"getHeaderGroupProps":{"name":"func","description":"Returns props for the header tr element","required":true}}}},"required":true,"docblock":"","doclets":[],"description":{"id":"c1edfdd3-dc7a-5f70-a779-a028e8cc387b","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"TablePagination","props":[]},{"displayName":"TableRow","props":[{"defaultValue":null,"name":"row","type":{"name":"shape","raw":null,"value":{"getRowProps":{"name":"func","description":"props to include on the tr tag (must include id)","required":true},"cells":{"name":"arrayOf","value":{"name":"shape","value":{}},"description":"cells in the row","required":true},"id":{"name":"string","description":"row id","required":true},"isSelected":{"name":"bool","description":"indicates if row has been selected","required":false},"isExpanded":{"name":"bool","description":"Indicates if row has been expanded.","required":false}}},"required":true,"docblock":"Row data that is received from `react-table` API.","doclets":[],"description":{"id":"0ae6cfdb-7422-56ee-a8c2-eac26f31940c","text":"Row data that is received from `react-table` API.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Row data that is received from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-table\"), \" API.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"DataTable","props":[{"defaultValue":null,"name":"columns","type":{"name":"arrayOf","raw":null,"value":{"name":"shape","value":{"Header":{"name":"union","value":[{"name":"func"},{"name":"node"}],"description":"User visible column name","required":true},"accessor":{"name":"string","description":"String used to access the correct cell data for this column","required":true}}}},"required":true,"docblock":"Definition of table columns","doclets":[],"description":{"id":"3684c668-1d97-5040-9294-7c3f54212701","text":"Definition of table columns","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Definition of table columns\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"data","type":{"name":"arrayOf","raw":null,"value":{"name":"shape","value":{}}},"required":true,"docblock":"Data to be displayed in the table","doclets":[],"description":{"id":"c82b05ed-7d4d-55be-80d9-57c6778259e3","text":"Data to be displayed in the table","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Data to be displayed in the table\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"isSelectable","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"table rows can be selected","doclets":[],"description":{"id":"93aa636e-ae53-535b-938f-1200bcf558f0","text":"table rows can be selected","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"table rows can be selected\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"manualSelectColumn","type":{"name":"shape","raw":null,"value":{"id":{"name":"string","required":true},"Header":{"name":"union","value":[{"name":"func"},{"name":"node"}],"required":true},"Cell":{"name":"func","required":true},"disableSortBy":{"name":"bool","required":true}}},"required":false,"docblock":"Alternate column for selecting rows. See react table useSort docs for more information","doclets":[],"description":{"id":"9edc4e09-4ca8-5969-a440-ecb2de736bef","text":"Alternate column for selecting rows. See react table useSort docs for more information","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Alternate column for selecting rows. See react table useSort docs for more information\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"isSortable","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Table columns can be sorted","doclets":[],"description":{"id":"9228fb2e-7ef3-53d1-978b-941c548ca15f","text":"Table columns can be sorted","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Table columns can be sorted\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"manualSortBy","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Indicates that sorting will be done via backend API. A fetchData function must be provided","doclets":[],"description":{"id":"178484ba-39f2-5165-b6cf-c8c757d06926","text":"Indicates that sorting will be done via backend API. A fetchData function must be provided","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Indicates that sorting will be done via backend API. A fetchData function must be provided\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"isPaginated","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Paginate the table","doclets":[],"description":{"id":"4e2e91bb-cd93-5c4d-b4a9-55beea9d565c","text":"Paginate the table","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Paginate the table\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"manualPagination","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Indicates that pagination will be done manually. A fetchData function must be provided","doclets":[],"description":{"id":"d0a3d5cb-0a42-5d00-b462-99278c658831","text":"Indicates that pagination will be done manually. A fetchData function must be provided","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Indicates that pagination will be done manually. A fetchData function must be provided\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"pageCount","type":{"name":"custom","raw":"requiredWhen(PropTypes.number, 'manualPagination')","value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"e523d1a1-8785-5b34-8f70-e8baf593c232","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"isFilterable","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Table rows can be filtered, using a default filter in the default column values, or in the column definition","doclets":[],"description":{"id":"736d62a1-9fd2-50de-bc9d-69d0bddcb26e","text":"Table rows can be filtered, using a default filter in the default column values, or in the column definition","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Table rows can be filtered, using a default filter in the default column values, or in the column definition\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"manualFilters","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Indicates that filtering will be done via a backend API. A fetchData function must be provided","doclets":[],"description":{"id":"4af9d74d-b560-5b3b-bfa7-7c42ce008ec6","text":"Indicates that filtering will be done via a backend API. A fetchData function must be provided","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Indicates that filtering will be done via a backend API. A fetchData function must be provided\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{}"},"name":"defaultColumnValues","type":{"name":"shape","raw":null,"value":{"Filter":{"name":"union","value":[{"name":"func"},{"name":"node"}],"description":"A default filter component for the column","required":false}}},"required":false,"docblock":"defaults that will be set on each column. Will be overridden by individual column values","doclets":[],"description":{"id":"00e3e527-6d8d-5c20-b6a2-2cf0263812fc","text":"defaults that will be set on each column. Will be overridden by individual column values","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"defaults that will be set on each column. Will be overridden by individual column values\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"[]"},"name":"additionalColumns","type":{"name":"arrayOf","raw":null,"value":{"name":"shape","value":{"id":{"name":"string","description":"id must be unique from other columns ids","required":true},"Header":{"name":"union","value":[{"name":"string"},{"name":"node"}],"description":"column header that will be displayed to the user","required":false},"Cell":{"name":"union","value":[{"name":"func"},{"name":"node"}],"description":"Component that renders in the added column. It will receive the row as a prop","required":false}}}},"required":false,"docblock":"Actions or other additional non-data columns can be added here","doclets":[],"description":{"id":"64c3f053-72ff-5b5e-8a69-2cc97c64d89c","text":"Actions or other additional non-data columns can be added here","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Actions or other additional non-data columns can be added here\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"null"},"name":"fetchData","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Function that will fetch table data. Called when page size, page index or filters change.\nMeant to be used with manual filters and pagination","doclets":[],"description":{"id":"671fd1ef-fd66-5f5b-a4aa-5b795e7ce0b7","text":"Function that will fetch table data. Called when page size, page index or filters change.\nMeant to be used with manual filters and pagination","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Function that will fetch table data. Called when page size, page index or filters change.\\nMeant to be used with manual filters and pagination\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{}"},"name":"initialState","type":{"name":"shape","raw":null,"value":{"pageSize":{"name":"custom","raw":"requiredWhen(PropTypes.number, 'isPaginated')","required":false},"pageIndex":{"name":"custom","raw":"requiredWhen(PropTypes.number, 'isPaginated')","required":false},"filters":{"name":"custom","raw":"requiredWhen(PropTypes.arrayOf(PropTypes.shape()), 'manualFilters')","required":false},"sortBy":{"name":"custom","raw":"requiredWhen(PropTypes.arrayOf(PropTypes.shape()), 'manualSortBy')","required":false}}},"required":false,"docblock":"Initial state passed to react-table's documentation https://react-table.tanstack.com/docs/api/useTable","doclets":[],"description":{"id":"e0be8659-9daf-558b-81a3-40ff662ff53c","text":"Initial state passed to react-table's documentation https://react-table.tanstack.com/docs/api/useTable","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Initial state passed to react-table's documentation \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://react-table.tanstack.com/docs/api/useTable\"\n  }, \"https://react-table.tanstack.com/docs/api/useTable\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{}"},"name":"initialTableOptions","type":{"name":"shape","raw":null,"value":{}},"required":false,"docblock":"Table options passed to react-table's useTable hook. Will override some options passed in to DataTable, such\n     as: data, columns, defaultColumn, manualFilters, manualPagination, manualSortBy, and initialState","doclets":[],"description":{"id":"7b57a7dd-1337-577c-b341-447289256a2c","text":"Table options passed to react-table's useTable hook. Will override some options passed in to DataTable, such\n     as: data, columns, defaultColumn, manualFilters, manualPagination, manualSortBy, and initialState","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Table options passed to react-table's useTable hook. Will override some options passed in to DataTable, such\\nas: data, columns, defaultColumn, manualFilters, manualPagination, manualSortBy, and initialState\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"itemCount","type":{"name":"number","raw":null,"value":null},"required":true,"docblock":"Actions to be performed on the table. Called with the table instance. Not displayed if rows are selected.","doclets":[],"description":{"id":"dd8718e6-faf1-594f-bce9-284573b5e574","text":"Actions to be performed on the table. Called with the table instance. Not displayed if rows are selected.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Actions to be performed on the table. Called with the table instance. Not displayed if rows are selected.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"[]"},"name":"bulkActions","type":{"name":"union","raw":null,"value":[{"name":"arrayOf","value":{"name":"union","value":[{"name":"shape","value":{"buttonText":{"name":"string","description":"Bulk action button text","required":true},"handleClick":{"name":"func","description":"handleClick will be passed the selected rows","required":true},"className":{"name":"string","description":"classnames for button class","required":false},"variant":{"name":"string","description":"optional button variant; only relevant for the first two buttons","required":false},"disabled":{"name":"bool","description":"disables button","required":false}}},{"name":"func","description":"function passed selected items, should return action object"}]}},{"name":"func","description":"Function for rendering custom components"}]},"required":false,"docblock":"Actions to be performed on selected rows of the table. Called with the selected rows.\n Only displayed if rows are selected.","doclets":[],"description":{"id":"266e706f-c995-53a0-b915-354ba7d3714b","text":"Actions to be performed on selected rows of the table. Called with the selected rows.\n Only displayed if rows are selected.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Actions to be performed on selected rows of the table. Called with the selected rows.\\nOnly displayed if rows are selected.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"[]"},"name":"tableActions","type":{"name":"union","raw":null,"value":[{"name":"arrayOf","value":{"name":"union","value":[{"name":"shape","value":{"buttonText":{"name":"string","description":"Bulk action button text","required":true},"handleClick":{"name":"func","description":"handleClick will be passed the selected rows","required":true},"className":{"name":"string","description":"classnames for button class","required":false},"variant":{"name":"string","description":"optional button variant; only relevant for the first two buttons","required":false},"disabled":{"name":"bool","description":"disables button","required":false}}},{"name":"func","description":"function passed table instance, should return action object"}]}},{"name":"func","description":"Function for rendering custom components"}]},"required":false,"docblock":"Function for rendering custom components, called with the table instance","doclets":[],"description":{"id":"825f80eb-c4ff-5a88-ac3a-ac5503b7919e","text":"Function for rendering custom components, called with the table instance","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Function for rendering custom components, called with the table instance\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"1"},"name":"numBreakoutFilters","type":{"name":"enum","raw":null,"value":[{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false}]},"required":false,"docblock":"Number between one and four filters that can be shown on the top row.","doclets":[],"description":{"id":"15204183-03a1-5e15-b4b9-38997d57d453","text":"Number between one and four filters that can be shown on the top row.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Number between one and four filters that can be shown on the top row.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"EmptyTableContent"},"name":"EmptyTableComponent","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Component to be displayed when the table is empty","doclets":[],"description":{"id":"18d4677d-e7c8-5df7-a661-4f07a8569604","text":"Component to be displayed when the table is empty","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Component to be displayed when the table is empty\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"RowStatus"},"name":"RowStatusComponent","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Component to be displayed for row status, ie, 10 of 20 rows. Displayed by default in the TableControlBar","doclets":[],"description":{"id":"9ad7f201-9865-5286-9078-45ffe5970eb8","text":"Component to be displayed for row status, ie, 10 of 20 rows. Displayed by default in the TableControlBar","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Component to be displayed for row status, ie, 10 of 20 rows. Displayed by default in the TableControlBar\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"SelectionStatus"},"name":"SelectionStatusComponent","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Component to be displayed for selection status. Displayed when there are selected rows and no active filters","doclets":[],"description":{"id":"56b5282f-d684-5b8e-954f-490fcf7389b2","text":"Component to be displayed for selection status. Displayed when there are selected rows and no active filters","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Component to be displayed for selection status. Displayed when there are selected rows and no active filters\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"FilterStatus"},"name":"FilterStatusComponent","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Component to be displayed for filter status. Displayed when there are active filters.","doclets":[],"description":{"id":"3587c8f5-9382-5388-93fe-ebe889a6233e","text":"Component to be displayed for filter status. Displayed when there are active filters.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Component to be displayed for filter status. Displayed when there are active filters.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"null"},"name":"children","type":{"name":"union","raw":null,"value":[{"name":"arrayOf","value":{"name":"node"}},{"name":"node"}]},"required":false,"docblock":"If children are not provided a table with control bar and footer will be rendered","doclets":[],"description":{"id":"519b0322-59aa-55ac-9855-1e4e97922ad4","text":"If children are not provided a table with control bar and footer will be rendered","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If children are not provided a table with control bar and footer will be rendered\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"showFiltersInSidebar","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"If true filters will be shown on sidebar instead","doclets":[],"description":{"id":"ece0b149-e255-5f43-8458-fe1686a5d203","text":"If true filters will be shown on sidebar instead","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If true filters will be shown on sidebar instead\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{\n  isDataViewToggleEnabled: false,\n  onDataViewToggle: () => {},\n  defaultActiveStateValue: 'card',\n  togglePlacement: 'left',\n}"},"name":"dataViewToggleOptions","type":{"name":"shape","raw":null,"value":{"isDataViewToggleEnabled":{"name":"bool","description":"Whether to show a toggle button group which allows view switching between card and table views","required":false},"onDataViewToggle":{"name":"func","description":"Callback invoked when the toggle buttons are clicked, with value of selected button passed in","required":false},"defaultActiveStateValue":{"name":"string","description":"default value for toggle active state","required":false},"togglePlacement":{"name":"string","description":"placement of toggle 'bottom' will push it to the bottom row in\nactions section. Only 'left' and 'bottom' are supported","required":false}}},"required":false,"docblock":"options for data view toggle","doclets":[],"description":{"id":"ca5fcab4-a4c3-54a3-897e-41b338fd4637","text":"options for data view toggle","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"options for data view toggle\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"renderRowSubComponent","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"A function that will render contents of expanded row, accepts `row` as a prop.","doclets":[],"description":{"id":"abad0926-0fe4-51f0-9b35-3ff4313562f5","text":"A function that will render contents of expanded row, accepts `row` as a prop.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A function that will render contents of expanded row, accepts \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"row\"), \" as a prop.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"isExpandable","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Indicates whether table supports expandable rows.","doclets":[],"description":{"id":"68cfda27-d1c2-5b12-a152-8d70e20d1c91","text":"Indicates whether table supports expandable rows.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Indicates whether table supports expandable rows.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"isLoading","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"e720d1ca-224d-5c78-9824-16a38bf7dc4c","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"Table","props":[{"defaultValue":{"value":"null"},"name":"caption","type":{"name":"union","raw":null,"value":[{"name":"string"},{"name":"element"}]},"required":false,"docblock":"","doclets":[],"description":{"id":"9be9d065-7e0a-54cf-bfda-1af3c1da984b","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"7bb3fbbb-e827-5741-9109-42e5d900d890","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"data","type":{"name":"arrayOf","raw":null,"value":{"name":"object"}},"required":true,"docblock":"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\n\n1. `label` (string or element; required) contains the display string for each column's heading.\n2. `key` (string; required) maps that label to its corresponding datum for each row in `data`, to ensure table data are displayed in their appropriate columns.\n3. `columnSortable` (boolean; optional) specifies at the column-level whether the column is sortable. If `columnSortable` is `true`, a sort button will be rendered in the column table heading. It is only required if `tableSortable` is set to `true`.\n4. `onSort` (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's `columnSortable` is set to `true`.\n5. `hideHeader` (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\n6. `width` (string; conditionally required) only if `hasFixedColumnWidths` is set to `true`, the `<td>` elements' `class` attributes will be set to this value. This allows restricting columns to specific widths. See [Bootstrap's grid documentation](https://getbootstrap.com/docs/4.0/layout/grid/) for `col` class names that can be used.\n\nThe order of objects in `columns` specifies the order of the columns in the table.","doclets":[],"description":{"id":"af2786df-801a-5bad-b591-469a28e4d0fa","text":"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\n\n1. `label` (string or element; required) contains the display string for each column's heading.\n2. `key` (string; required) maps that label to its corresponding datum for each row in `data`, to ensure table data are displayed in their appropriate columns.\n3. `columnSortable` (boolean; optional) specifies at the column-level whether the column is sortable. If `columnSortable` is `true`, a sort button will be rendered in the column table heading. It is only required if `tableSortable` is set to `true`.\n4. `onSort` (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's `columnSortable` is set to `true`.\n5. `hideHeader` (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\n6. `width` (string; conditionally required) only if `hasFixedColumnWidths` is set to `true`, the `<td>` elements' `class` attributes will be set to this value. This allows restricting columns to specific widths. See [Bootstrap's grid documentation](https://getbootstrap.com/docs/4.0/layout/grid/) for `col` class names that can be used.\n\nThe order of objects in `columns` specifies the order of the columns in the table.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"label\"), \" (string or element; required) contains the display string for each column's heading.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"key\"), \" (string; required) maps that label to its corresponding datum for each row in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"data\"), \", to ensure table data are displayed in their appropriate columns.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" (boolean; optional) specifies at the column-level whether the column is sortable. If \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", a sort button will be rendered in the column table heading. It is only required if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tableSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onSort\"), \" (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hideHeader\"), \" (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"width\"), \" (string; conditionally required) only if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hasFixedColumnWidths\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<td>\"), \" elements' \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"class\"), \" attributes will be set to this value. This allows restricting columns to specific widths. See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://getbootstrap.com/docs/4.0/layout/grid/\"\n  }, \"Bootstrap's grid documentation\"), \" for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"col\"), \" class names that can be used.\")), mdx(\"p\", null, \"The order of objects in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"columns\"), \" specifies the order of the columns in the table.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"columns","type":{"name":"arrayOf","raw":null,"value":{"name":"shape","value":{"key":{"name":"string","required":true},"label":{"name":"union","value":[{"name":"string"},{"name":"element"}],"required":true},"columnSortable":{"name":"custom","raw":"isRequiredIf(PropTypes.bool, props => props.tableSortable)","required":false},"onSort":{"name":"custom","raw":"isRequiredIf(PropTypes.func, props => props.columnSortable)","required":false},"hideHeader":{"name":"bool","required":false},"width":{"name":"custom","raw":"isRequiredIf(PropTypes.string, props => props.hasFixedColumnWidths)","required":false}}}},"required":true,"docblock":"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\n\n1. `label` (string or element; required) contains the display string for each column's heading.\n2. `key` (string; required) maps that label to its corresponding datum for each row in `data`, to ensure table data are displayed in their appropriate columns.\n3. `columnSortable` (boolean; optional) specifies at the column-level whether the column is sortable. If `columnSortable` is `true`, a sort button will be rendered in the column table heading. It is only required if `tableSortable` is set to `true`.\n4. `onSort` (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's `columnSortable` is set to `true`.\n5. `hideHeader` (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\n6. `width` (string; conditionally required) only if `hasFixedColumnWidths` is set to `true`, the `<td>` elements' `class` attributes will be set to this value. This allows restricting columns to specific widths. See [Bootstrap's grid documentation](https://getbootstrap.com/docs/4.0/layout/grid/) for `col` class names that can be used.\n\nThe order of objects in `columns` specifies the order of the columns in the table.","doclets":[],"description":{"id":"7b1577d7-fc6a-5ff0-b2c2-feb1f8ad4daf","text":"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\n\n1. `label` (string or element; required) contains the display string for each column's heading.\n2. `key` (string; required) maps that label to its corresponding datum for each row in `data`, to ensure table data are displayed in their appropriate columns.\n3. `columnSortable` (boolean; optional) specifies at the column-level whether the column is sortable. If `columnSortable` is `true`, a sort button will be rendered in the column table heading. It is only required if `tableSortable` is set to `true`.\n4. `onSort` (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's `columnSortable` is set to `true`.\n5. `hideHeader` (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\n6. `width` (string; conditionally required) only if `hasFixedColumnWidths` is set to `true`, the `<td>` elements' `class` attributes will be set to this value. This allows restricting columns to specific widths. See [Bootstrap's grid documentation](https://getbootstrap.com/docs/4.0/layout/grid/) for `col` class names that can be used.\n\nThe order of objects in `columns` specifies the order of the columns in the table.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"specifies the order and contents of the table's columns and provides display strings for each column's heading. It is composed of an ordered array of objects. Each object contains the following keys:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"label\"), \" (string or element; required) contains the display string for each column's heading.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"key\"), \" (string; required) maps that label to its corresponding datum for each row in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"data\"), \", to ensure table data are displayed in their appropriate columns.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" (boolean; optional) specifies at the column-level whether the column is sortable. If \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", a sort button will be rendered in the column table heading. It is only required if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tableSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onSort\"), \" (function; conditionally required) specifies what function is called when a sortable column is clicked. It is only required if the column's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"columnSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hideHeader\"), \" (boolean; optional) specifies at the column-level whether the column label is visible. A column that is sortable cannot have its label be hidden.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"width\"), \" (string; conditionally required) only if \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hasFixedColumnWidths\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<td>\"), \" elements' \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"class\"), \" attributes will be set to this value. This allows restricting columns to specific widths. See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://getbootstrap.com/docs/4.0/layout/grid/\"\n  }, \"Bootstrap's grid documentation\"), \" for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"col\"), \" class names that can be used.\")), mdx(\"p\", null, \"The order of objects in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"columns\"), \" specifies the order of the columns in the table.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"[]"},"name":"headingClassName","type":{"name":"arrayOf","raw":null,"value":{"name":"string"}},"required":false,"docblock":"Specifies Bootstrap class names to apply to the table heading. Options are detailed in [Bootstrap's docs](https://getbootstrap.com/docs/4.0/content/tables/#table-head-options).","doclets":[],"description":{"id":"780d94fa-2a2c-5e7f-b140-c3c0461c6910","text":"Specifies Bootstrap class names to apply to the table heading. Options are detailed in [Bootstrap's docs](https://getbootstrap.com/docs/4.0/content/tables/#table-head-options).","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies Bootstrap class names to apply to the table heading. Options are detailed in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://getbootstrap.com/docs/4.0/content/tables/#table-head-options\"\n  }, \"Bootstrap's docs\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"tableSortable","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Specifies whether the table is sortable. This setting supercedes column-level sortability, so if it is `false`, no sortable components will be rendered.","doclets":[],"description":{"id":"7b76d30b-96d5-50a5-8e8e-57b56efdffaa","text":"Specifies whether the table is sortable. This setting supercedes column-level sortability, so if it is `false`, no sortable components will be rendered.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies whether the table is sortable. This setting supercedes column-level sortability, so if it is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \", no sortable components will be rendered.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"hasFixedColumnWidths","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Specifies whether the table's columns have fixed widths. Every element in `columns` must define a `width` if this is `true`.","doclets":[],"description":{"id":"0ef46e8d-5860-51eb-8df8-f4ff80a332c9","text":"Specifies whether the table's columns have fixed widths. Every element in `columns` must define a `width` if this is `true`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies whether the table's columns have fixed widths. Every element in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"columns\"), \" must define a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"width\"), \" if this is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"defaultSortedColumn","type":{"name":"custom","raw":"isRequiredIf(PropTypes.string, props => props.tableSortable)","value":null},"required":false,"docblock":"Specifies the key of the column that is sorted by default. It is only required if `tableSortable` is set to `true`.","doclets":[],"description":{"id":"2b7ff643-cc83-5d61-a867-7aecd9e02e0a","text":"Specifies the key of the column that is sorted by default. It is only required if `tableSortable` is set to `true`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the key of the column that is sorted by default. It is only required if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tableSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"defaultSortDirection","type":{"name":"custom","raw":"isRequiredIf(PropTypes.string, props => props.tableSortable)","value":null},"required":false,"docblock":"Specifies the direction the `defaultSortedColumn` is sorted in by default; it will typically be either 'asc' or 'desc'. It is only required if `tableSortable` is set to `true`.","doclets":[],"description":{"id":"96afad8b-8692-52b5-acef-e623cac71ccb","text":"Specifies the direction the `defaultSortedColumn` is sorted in by default; it will typically be either 'asc' or 'desc'. It is only required if `tableSortable` is set to `true`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the direction the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"defaultSortedColumn\"), \" is sorted in by default; it will typically be either 'asc' or 'desc'. It is only required if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tableSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{\n  asc: 'sort ascending',\n  desc: 'sort descending',\n  defaultText: 'click to sort',\n}"},"name":"sortButtonsScreenReaderText","type":{"name":"custom","raw":"isRequiredIf(\n  PropTypes.shape({\n    asc: PropTypes.string,\n    desc: PropTypes.string,\n    defaultText: PropTypes.string,\n  }),\n  props => props.tableSortable,\n)","value":null},"required":false,"docblock":"Specifies the screen reader only text that accompanies the sort buttons for sortable columns. It takes the form of an object containing the following keys:\n\n1. `asc`: (string) specifies the screen reader only text for sort buttons in the ascending state.\n2. `desc`: (string) specifies the screen reader only text for sort buttons in the descending state.\n3. `defaultText`: (string) specifies the screen reader only text for sort buttons that are not engaged.\n\nIt is only required if `tableSortable` is set to `true`.\n\nDefault:\n\n```javascript\n{\n  asc: 'sort ascending',\n  desc: 'sort descending',\n  defaultText: 'click to sort',\n}\n```","doclets":[],"description":{"id":"c832ad71-dc64-568b-aaa6-24f2784e834b","text":"Specifies the screen reader only text that accompanies the sort buttons for sortable columns. It takes the form of an object containing the following keys:\n\n1. `asc`: (string) specifies the screen reader only text for sort buttons in the ascending state.\n2. `desc`: (string) specifies the screen reader only text for sort buttons in the descending state.\n3. `defaultText`: (string) specifies the screen reader only text for sort buttons that are not engaged.\n\nIt is only required if `tableSortable` is set to `true`.\n\nDefault:\n\n```javascript\n{\n  asc: 'sort ascending',\n  desc: 'sort descending',\n  defaultText: 'click to sort',\n}\n```","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the screen reader only text that accompanies the sort buttons for sortable columns. It takes the form of an object containing the following keys:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"asc\"), \": (string) specifies the screen reader only text for sort buttons in the ascending state.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"desc\"), \": (string) specifies the screen reader only text for sort buttons in the descending state.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"defaultText\"), \": (string) specifies the screen reader only text for sort buttons that are not engaged.\")), mdx(\"p\", null, \"It is only required if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tableSortable\"), \" is set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\"), mdx(\"p\", null, \"Default:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"{\\n  asc: 'sort ascending',\\n  desc: 'sort descending',\\n  defaultText: 'click to sort',\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"rowHeaderColumnKey","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies the key for the column that should act as a row header. Rather than rendering as `<td>` elements,\ncells in this column will render as `<th scope=\"row\">`","doclets":[],"description":{"id":"cb629ef4-d668-509f-9b1e-34c99bc0f1a4","text":"Specifies the key for the column that should act as a row header. Rather than rendering as `<td>` elements,\ncells in this column will render as `<th scope=\"row\">`","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the key for the column that should act as a row header. Rather than rendering as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<td>\"), \" elements,\\ncells in this column will render as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<th scope=\\\"row\\\">\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"TextFilter","props":[{"defaultValue":null,"name":"column","type":{"name":"shape","raw":null,"value":{"setFilter":{"name":"func","required":true},"Header":{"name":"union","value":[{"name":"func"},{"name":"node"}],"required":true},"getHeaderProps":{"name":"func","required":true},"filterValue":{"name":"string","required":false}}},"required":true,"docblock":"Specifies a column object.\n\n`setFilter`: Function to set the filter value.\n\n`Header`: Column header used for labels and placeholders.\n\n`getHeaderProps`: Generates a key unique to the column being filtered.\n\n`filterValue`: Value for the filter input.","doclets":[],"description":{"id":"4b70cf27-110e-5b7f-aaf7-1481bd642a24","text":"Specifies a column object.\n\n`setFilter`: Function to set the filter value.\n\n`Header`: Column header used for labels and placeholders.\n\n`getHeaderProps`: Generates a key unique to the column being filtered.\n\n`filterValue`: Value for the filter input.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies a column object.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setFilter\"), \": Function to set the filter value.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Header\"), \": Column header used for labels and placeholders.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getHeaderProps\"), \": Generates a key unique to the column being filtered.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"filterValue\"), \": Value for the filter input.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"SelectionStatus","props":[{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"A class name to append to the base element","doclets":[],"description":{"id":"c0ca3d01-b1ac-5f82-a388-9fccba862089","text":"A class name to append to the base element","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A class name to append to the base element\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"CLEAR_SELECTION_TEXT"},"name":"clearSelectionText","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"A text that appears on the `Clear selection` button","doclets":[],"description":{"id":"57c8fb9f-c2dc-5104-b706-072c2c8f6714","text":"A text that appears on the `Clear selection` button","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A text that appears on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Clear selection\"), \" button\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"5ec0205e-16e5-51f5-9f82-7423520011e6","components":["DataTable","DataViewToggle","BulkActions","TableActions","Table","CardView","TableCell","TableHeaderCell","TableHeaderRow","TableRow","FilterStatus","SelectionStatus","RowStatus","SmartStatus","TablePagination","TextFilter"],"cssVariables":""}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}