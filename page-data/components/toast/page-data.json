{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/toast/",
    "result": {"data":{"mdx":{"id":"497c721b-a566-5335-8d98-551ed60d7572","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Toast\",\n  \"type\": \"component\",\n  \"components\": [\"Toast\"],\n  \"categories\": [\"Overlays\"],\n  \"status\": \"New\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Toast\"), \" is a pop-up style message that shows the user a brief, fleeting, dismissible message about a successful app process.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Toasts\"), \" sit fixed to the bottom left of the window.\"), mdx(\"h4\", {\n    \"id\": \"behaviors\"\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#behaviors\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Behaviors\"), mdx(\"ul\", null, mdx(\"li\", null, \"Auto-dismiss: Toast automatically dismisses after 5 seconds by default.\"), mdx(\"li\", null, \"Disable timer: On hover of the Toast container. On hover or focus of dismiss icon or optional button\"), mdx(\"li\", null, \"Re-enable timer: On mouse leave of the Toast container. On blur of dismiss icon or option button\"), mdx(\"li\", null, \"Auto-dismiss timer: 5 - 15 second range.\")), mdx(\"h3\", {\n    \"id\": \"basic-usage\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Basic Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"() => {\\n  const [show, setShow] = useState(false);\\n\\n  return (\\n    <>\\n      <Toast\\n        onClose={() => setShow(false)}\\n        show={show}\\n      >\\n        Example of a basic Toast.\\n      </Toast>\\n\\n      <Button variant=\\\"primary\\\" onClick={() => setShow(true)}>Show Toast</Button>\\n    </>\\n  );\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"with-button\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-button\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With Button\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"() => {\\n  const [show, setShow] = useState(false);\\n\\n  return (\\n    <>\\n      <Toast\\n        action={{\\n          label: \\\"Optional Button\\\",\\n          onClick: () => console.log('You clicked the action button.')\\n        }}\\n        onClose={() => setShow(false)}\\n        show={show}\\n      >\\n        Success! Example of a Toast with a button.\\n      </Toast>\\n\\n      <Button variant=\\\"primary\\\" onClick={() => setShow(true)}>Show Toast</Button>\\n    </>\\n  );\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"with-link\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-link\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With Link\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"() => {\\n  const [show, setShow] = useState(false);\\n\\n  return (\\n    <>\\n      <Toast\\n        action={{\\n          label: \\\"Optional Link\\\",\\n          href: \\\"#\\\"\\n        }}\\n        onClose={() => setShow(false)}\\n        show={show}\\n      >\\n        Success! Example of a Toast with a link.\\n      </Toast>\\n\\n      <Button variant=\\\"primary\\\" onClick={() => setShow(true)}>Show Toast</Button>\\n    </>\\n  );\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Toast","status":"New","notes":"","components":["Toast"]}},"components":{"nodes":[{"displayName":"Toast","props":[{"defaultValue":null,"name":"children","type":{"name":"string","raw":null,"value":null},"required":true,"docblock":"A string or an element that is rendered inside the main body of the `Toast`.","doclets":[],"description":{"id":"b8788d04-c7a2-5b78-8920-2bb5f22e951d","text":"A string or an element that is rendered inside the main body of the `Toast`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A string or an element that is rendered inside the main body of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Toast\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"onClose","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"A function that is called on close. It can be used to perform\nactions upon closing of the `Toast`, such as setting the \"show\"\nelement to false.","doclets":[],"description":{"id":"13121258-dc53-5d20-8902-3a2417507a7b","text":"A function that is called on close. It can be used to perform\nactions upon closing of the `Toast`, such as setting the \"show\"\nelement to false.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A function that is called on close. It can be used to perform\\nactions upon closing of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Toast\"), \", such as setting the \\\"show\\\"\\nelement to false.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"show","type":{"name":"bool","raw":null,"value":null},"required":true,"docblock":"Boolean used to control whether the `Toast` shows","doclets":[],"description":{"id":"d858d9cf-7a46-5da5-bd9b-8661ef26608c","text":"Boolean used to control whether the `Toast` shows","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Boolean used to control whether the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Toast\"), \" shows\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"null"},"name":"action","type":{"name":"shape","raw":null,"value":{"label":{"name":"string","required":true},"href":{"name":"string","required":false},"onClick":{"name":"func","required":false}}},"required":false,"docblock":"Fields used to build optional action button.\n`label` is a string rendered inside the button.\n`href` is a link that will render the action button as an anchor tag.\n`onClick` is a function that is called when the button is clicked.","doclets":[],"description":{"id":"2a048198-6c04-5f95-a6bf-7f70ae968e15","text":"Fields used to build optional action button.\n`label` is a string rendered inside the button.\n`href` is a link that will render the action button as an anchor tag.\n`onClick` is a function that is called when the button is clicked.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Fields used to build optional action button.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"label\"), \" is a string rendered inside the button.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"href\"), \" is a link that will render the action button as an anchor tag.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClick\"), \" is a function that is called when the button is clicked.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'Close'"},"name":"closeLabel","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Alt text for the `Toast`'s dismiss button. The recommended use is an i18n value.\nThe default is an English string.","doclets":[],"description":{"id":"3a19b079-f471-5c27-aad8-ee31134569e8","text":"Alt text for the `Toast`'s dismiss button. The recommended use is an i18n value.\nThe default is an English string.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Alt text for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Toast\"), \"'s dismiss button. The recommended use is an i18n value.\\nThe default is an English string.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"5000"},"name":"delay","type":{"name":"number","raw":null,"value":null},"required":false,"docblock":"Time in milliseconds for which the `Toast` will display.","doclets":[],"description":{"id":"c297e53c-4acd-59cd-8890-81d851b4fe74","text":"Time in milliseconds for which the `Toast` will display.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Time in milliseconds for which the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Toast\"), \" will display.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"497c721b-a566-5335-8d98-551ed60d7572","components":["Toast"],"cssVariables":"\n// Toasts\n\n$toast-max-width:                   400px !default;\n$toast-padding-x:                   .75rem !default;\n$toast-padding-y:                   .25rem !default;\n$toast-font-size:                   .875rem !default;\n$toast-color:                       null !default;\n$toast-background-color:            $gray-700 !default;\n$toast-border-width:                1px !default;\n$toast-border-color:                rgba(0, 0, 0, .1) !default;\n$toast-border-radius:               .25rem !default;\n$toast-box-shadow:                  0 1.25rem 2.5rem rgba($black, .15), 0 .5rem 3rem rgba($black, .15) !default;\n\n$toast-header-color:                $white !default;\n$toast-header-background-color:     $gray-700 !default;\n$toast-header-border-color:         rgba(0, 0, 0, .05) !default;\n"}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}