{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/annotation/",
    "result": {"data":{"mdx":{"id":"e9268ec0-be90-5fd2-bf3d-f16d72737aa2","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Annotation\",\n  \"type\": \"component\",\n  \"components\": [\"Annotation\"],\n  \"categories\": [\"Status & metadata\"],\n  \"status\": \"New\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"In progress\",\n  \"notes\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Display informative text related to an object on screen. Unlike the tooltip an annotation is not interactive.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't put links or interactive elements in annotations - use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/paragon/components/popover\"\n  }, \"Popover\"), \" instead\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t use annotations if trigger is needed - use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/paragon/components/tooltip\"\n  }, \"Tooltips\"), \" instead\")), mdx(\"h3\", {\n    \"id\": \"basic-usage\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Basic Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<>\\n  <Annotation>\\n    Success variant\\n  </Annotation>\\n  <Annotation \\n    variant=\\\"dark\\\"\\n    arrowPlacement=\\\"left\\\"\\n    className=\\\"mr-2 mb-2\\\"\\n  >\\n    Dark variant\\n  </Annotation>\\n  <Annotation \\n    variant=\\\"error\\\" \\n    arrowPlacement=\\\"top\\\"\\n    className=\\\"mr-2 mb-2\\\"\\n  >\\n    Error variant\\n  </Annotation>\\n  <Annotation\\n    variant=\\\"warning\\\"\\n    arrowPlacement=\\\"right\\\" \\n    className=\\\"mb-2\\\"\\n  >\\n    Warning variant\\n  </Annotation>\\n  <Annotation\\n    variant=\\\"light\\\"\\n    className=\\\"mb-2\\\"\\n  >\\n    Light variant. By default max width is set to 300px with wrapping text.\\n  </Annotation>\\n</>\\n\")), mdx(\"h3\", {\n    \"id\": \"referring-to-other-elements\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#referring-to-other-elements\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Referring to other elements\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<>\\n  <div className=\\\"d-flex justify-content-around mb-4\\\">\\n    <div className=\\\"d-flex flex-column align-items-center\\\">\\n      <Annotation>\\n        Annotation on top\\n      </Annotation>\\n      <Button>This is an example button</Button>\\n    </div>\\n    <div className=\\\"d-flex align-items-center\\\"> \\n      <Button>This is an example button</Button>\\n      <Annotation arrowPlacement='left'>\\n        Annotation on right\\n      </Annotation>\\n    </div>\\n  </div>\\n  <div className=\\\"d-flex justify-content-around\\\">\\n    <div className=\\\"d-flex align-items-center\\\">\\n      <Annotation arrowPlacement='right'>\\n        Annotation on left\\n      </Annotation>\\n      <Button>This is an example button</Button>\\n    </div>\\n    <div className=\\\"d-flex flex-column align-items-center\\\">\\n      <Button>This is an example button</Button>\\n      <Annotation arrowPlacement='top'>\\n        Annotation on bottom\\n      </Annotation>\\n    </div>\\n  </div>\\n</>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Annotation","status":"New","notes":"","components":["Annotation"]}},"components":{"nodes":[{"displayName":"Annotation","props":[{"defaultValue":null,"name":"children","type":{"name":"node","raw":null,"value":null},"required":true,"docblock":"Specifies contents of the component.","doclets":[],"description":{"id":"e71f462b-04c4-56fe-b91c-9ac810ad9ae8","text":"Specifies contents of the component.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies contents of the component.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies class name to append to the base element.","doclets":[],"description":{"id":"c8f62084-6daa-5120-988b-03883579fc40","text":"Specifies class name to append to the base element.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies class name to append to the base element.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'success'"},"name":"variant","type":{"name":"enum","raw":null,"value":[{"value":"'error'","computed":false},{"value":"'success'","computed":false},{"value":"'warning'","computed":false},{"value":"'light'","computed":false},{"value":"'dark'","computed":false}]},"required":false,"docblock":"Specifies variant to use.","doclets":[],"description":{"id":"7504ec6c-8965-54f1-b61f-d6de1c96de91","text":"Specifies variant to use.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies variant to use.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'bottom'"},"name":"arrowPlacement","type":{"name":"enum","raw":null,"value":[{"value":"'top'","computed":false},{"value":"'right'","computed":false},{"value":"'bottom'","computed":false},{"value":"'left'","computed":false}]},"required":false,"docblock":"Specifies arrow position.","doclets":[],"description":{"id":"4be96cfe-7276-58fa-9a22-eb7868e1c556","text":"Specifies arrow position.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies arrow position.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"e9268ec0-be90-5fd2-bf3d-f16d72737aa2","components":["Annotation"],"cssVariables":"$annotation-padding:               .5rem !default;\n$annotation-box-shadow:            drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.15)) drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.15)) !default;\n$annotation-border-radius:         .25rem !default;\n$annotation-max-width:             18.75rem !default;\n$annotation-font-size:             $font-size-sm !default;\n$annotation-line-height:           $line-height-sm !default;\n\n$annotation-variants: (\n  \"success\": ( \"background-color\": $success, \"color\": $white ),\n  \"warning\": ( \"background-color\": $accent-b, \"color\": $black ),\n  \"error\":   ( \"background-color\": $danger, \"color\": $white ),\n  \"light\":   ( \"background-color\": $white, \"color\": $primary-500 ),\n  \"dark\":    ( \"background-color\": $dark, \"color\": $white ),\n) !default;\n\n$annotation-arrow-side-margin:     .25rem !default;\n$annotation-arrow-border-width:    .5rem !default;\n"}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}