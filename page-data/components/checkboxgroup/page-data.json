{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/checkboxgroup/",
    "result": {"data":{"mdx":{"id":"1ec6d74e-7c5e-5cf7-bb31-4753c60d46c7","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CheckBoxGroup\",\n  \"type\": \"component\",\n  \"components\": [\"CheckBoxGroup\"],\n  \"categories\": [\"Forms (deprecated)\"],\n  \"status\": \"Deprecate Soon\",\n  \"designStatus\": \"To Do\",\n  \"devStatus\": \"To Do\",\n  \"notes\": \"Refactor to use Input component and refresh checkbox designs\\n\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"basic-usage\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Basic Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<CheckBoxGroup>\\n  <CheckBox\\n    id=\\\"checkbox1\\\"\\n    name=\\\"basicCheckBox1\\\"\\n    label=\\\"CheckBox 1\\\"\\n  />\\n  <CheckBox\\n    id=\\\"checkbox2\\\"\\n    name=\\\"basicCheckBox2\\\"\\n    label=\\\"CheckBox 2\\\"\\n  />\\n  <CheckBox\\n    id=\\\"checkbox3\\\"\\n    name=\\\"basicCheckBox3\\\"\\n    label=\\\"CheckBox 3\\\"\\n  />\\n</CheckBoxGroup>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"CheckBoxGroup","status":"Deprecate Soon","notes":"Refactor to use Input component and refresh checkbox designs\n","components":["CheckBoxGroup"]}},"components":{"nodes":[{"displayName":"CheckBoxGroup","props":[{"defaultValue":null,"name":"children","type":{"name":"arrayOf","raw":null,"value":{"name":"element"}},"required":true,"docblock":"represents the CheckBox components defined within the CheckBoxGroup component and is not a specific named prop that needs to be passed in. At least one CheckBox must be defined within the group. Example: `<CheckBoxGroup><CheckBox .../></CheckBoxGroup>`","doclets":[],"description":{"id":"9e982651-043f-5657-a733-093efdfb4ae0","text":"represents the CheckBox components defined within the CheckBoxGroup component and is not a specific named prop that needs to be passed in. At least one CheckBox must be defined within the group. Example: `<CheckBoxGroup><CheckBox .../></CheckBoxGroup>`","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"represents the CheckBox components defined within the CheckBoxGroup component and is not a specific named prop that needs to be passed in. At least one CheckBox must be defined within the group. Example: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<CheckBoxGroup><CheckBox .../></CheckBoxGroup>\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"1ec6d74e-7c5e-5cf7-bb31-4753c60d46c7","components":["CheckBoxGroup"],"cssVariables":""}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}