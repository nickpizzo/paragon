{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/pagination/",
    "result": {"data":{"mdx":{"id":"c0992aa3-2bd5-5402-951b-a21e63bbecf1","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Pagination\",\n  \"type\": \"component\",\n  \"components\": [\"Pagination\"],\n  \"categories\": [\"Navigation\"],\n  \"status\": \"Needs Work\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"To Do\",\n  \"notes\": \"TODO: shim from react-bootstrap\\nBreaks if given 5000 pages.\\nOverly complex implementation.\\nRemove baked in english strings\\n\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Navigation between multiple pages of some set of results. Controls are provided to navigate through multiple pages of related data.\"), mdx(\"h3\", {\n    \"id\": \"basic-usage\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Basic usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Pagination\\n  paginationLabel=\\\"pagination navigation\\\"\\n  pageCount={20}\\n  onPageSelect={() => console.log('page selected')}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-initial-page-selected\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-initial-page-selected\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With initial page selected\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Pagination\\n  paginationLabel=\\\"pagination navigation\\\"\\n  pageCount={20}\\n  currentPage={15}\\n  onPageSelect={() => console.log('page selected')}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-max-pages-displayed\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-max-pages-displayed\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With max pages displayed\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Pagination\\n  paginationLabel=\\\"pagination navigation\\\"\\n  pageCount={20}\\n  onPageSelect={() => console.log('page selected')}\\n  maxPagesDisplayed={9}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-custom-string-labels\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-custom-string-labels\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With custom string labels\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Pagination\\n  paginationLabel=\\\"pagination navigation\\\"\\n  pageCount={20}\\n  onPageSelect={() => console.log('page selected')}\\n  buttonLabels={{\\n    previous: 'Anterior',\\n    next: 'Siguiente',\\n    page: 'P\\xE1gina',\\n    currentPage: 'P\\xE1gina actual',\\n    pageOfCount: 'de',\\n  }}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-custom-element-labels\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-custom-element-labels\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With custom element labels\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Pagination\\n  paginationLabel=\\\"pagination navigation\\\"\\n  pageCount={20}\\n  onPageSelect={() => console.log('page selected')}\\n  buttonLabels={{\\n    previous: <span>Anterior</span>,\\n    next: <span>Siguiente</span>,\\n    page: <span>P\\xE1gina</span>,\\n    currentPage: <span>P\\xE1gina actual</span>,\\n    pageOfCount: <span>de</span>,\\n  }}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-custom-right-and-left-icons\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-custom-right-and-left-icons\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With custom right and left icons\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Pagination\\n  paginationLabel=\\\"pagination navigation\\\"\\n  pageCount={20}\\n  onPageSelect={() => console.log('page selected')}\\n  icons={{ // replacing with svg\\n    leftIcon: <svg viewBox=\\\"0 0 32 32\\\" style={{width: '15px'}} aria-hidden=\\\"true\\\" className=\\\"mr-2\\\"><path d=\\\"M14.19 16.005l7.869 7.868-2.129 2.129-9.996-9.997L19.937 6.002l2.127 2.129z\\\"/></svg>,\\n    rightIcon: <svg viewBox=\\\"0 0 32 32\\\" style={{width: '15px'}} aria-hidden=\\\"true\\\" className=\\\"ml-2\\\"><path d=\\\"M18.629 15.997l-7.083-7.081L13.462 7l8.997 8.997L13.457 25l-1.916-1.916z\\\"/></svg>\\n  }}\\n/>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Pagination","status":"Needs Work","notes":"TODO: shim from react-bootstrap\nBreaks if given 5000 pages.\nOverly complex implementation.\nRemove baked in english strings\n","components":["Pagination"]}},"components":{"nodes":[{"displayName":"Pagination","props":[{"defaultValue":null,"name":"onPageSelect","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"Specifies a callback function that is executed when the\nuser selects a page button or the `Previous`/`Next` buttons. For example:\n\n```jsx\n <Pagination onPageSelect={(pageNumber) => { console.log(pageNumber); } />\n```","doclets":[],"description":{"id":"39837fa0-7331-5e4c-9b06-13ea1d71b093","text":"Specifies a callback function that is executed when the\nuser selects a page button or the `Previous`/`Next` buttons. For example:\n\n```jsx\n <Pagination onPageSelect={(pageNumber) => { console.log(pageNumber); } />\n```","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies a callback function that is executed when the\\nuser selects a page button or the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Previous\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Next\"), \" buttons. For example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \" <Pagination onPageSelect={(pageNumber) => { console.log(pageNumber); } />\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"pageCount","type":{"name":"number","raw":null,"value":null},"required":true,"docblock":"Specifies the total number of pages in the `Pagination` component.","doclets":[],"description":{"id":"01dc4dbe-8bd4-58da-87a9-8021a2f95546","text":"Specifies the total number of pages in the `Pagination` component.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the total number of pages in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pagination\"), \" component.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"paginationLabel","type":{"name":"string","raw":null,"value":null},"required":true,"docblock":"Specifies the `aria-label` for the `<nav>` element that wraps the pagination button list.","doclets":[],"description":{"id":"d3f16f6f-4d85-5b28-a21b-129e0847bdf2","text":"Specifies the `aria-label` for the `<nav>` element that wraps the pagination button list.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-label\"), \" for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<nav>\"), \" element that wraps the pagination button list.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{\n  previous: 'Previous',\n  next: 'Next',\n  page: 'Page',\n  currentPage: 'Current Page',\n  pageOfCount: 'of',\n}"},"name":"buttonLabels","type":{"name":"shape","raw":null,"value":{"previous":{"name":"string","required":false},"next":{"name":"string","required":false},"page":{"name":"string","required":false},"currentPage":{"name":"string","required":false},"pageOfCount":{"name":"string","required":false}}},"required":false,"docblock":"Specifies the labels to use for the `Previous`/`Next`\nbuttons as well as the various parts of `aria-label`\non the page buttons for accessibility. All button labels\naccept both string or elements. The button label options are as follows:\n\n`previous`: Text for the `Previous` button;\n\n`next`: Text for the `Next` button;\n\n`page`: Text in the `aria-label` on page buttons to describe the button (e.g., \"**Page** 1\");\n\n`currentPage`: Text to depict the selected page in the `aria-label`\non page buttons (e.g., \"Page 1, **Current Page**\");\n\n`pageOfCount`: Text that separates the current page and total page count\nfor the mobile UI (e.g., \"Page 1 **of** 20\").\n\nThe default is:\n```javascript\n{\n  previous: 'Previous',\n  next: 'Next',\n  page: 'Page',\n  currentPage: 'Current Page',\n  pageOfCount: 'of',\n}\n```","doclets":[],"description":{"id":"921e6c0c-fc6c-5373-9087-5ff9eb8be0f9","text":"Specifies the labels to use for the `Previous`/`Next`\nbuttons as well as the various parts of `aria-label`\non the page buttons for accessibility. All button labels\naccept both string or elements. The button label options are as follows:\n\n`previous`: Text for the `Previous` button;\n\n`next`: Text for the `Next` button;\n\n`page`: Text in the `aria-label` on page buttons to describe the button (e.g., \"**Page** 1\");\n\n`currentPage`: Text to depict the selected page in the `aria-label`\non page buttons (e.g., \"Page 1, **Current Page**\");\n\n`pageOfCount`: Text that separates the current page and total page count\nfor the mobile UI (e.g., \"Page 1 **of** 20\").\n\nThe default is:\n```javascript\n{\n  previous: 'Previous',\n  next: 'Next',\n  page: 'Page',\n  currentPage: 'Current Page',\n  pageOfCount: 'of',\n}\n```","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the labels to use for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Previous\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Next\"), \"\\nbuttons as well as the various parts of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-label\"), \"\\non the page buttons for accessibility. All button labels\\naccept both string or elements. The button label options are as follows:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"previous\"), \": Text for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Previous\"), \" button;\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"next\"), \": Text for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Next\"), \" button;\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"page\"), \": Text in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-label\"), \" on page buttons to describe the button (e.g., \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Page\"), \" 1\\\");\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"currentPage\"), \": Text to depict the selected page in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aria-label\"), \"\\non page buttons (e.g., \\\"Page 1, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Current Page\"), \"\\\");\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pageOfCount\"), \": Text that separates the current page and total page count\\nfor the mobile UI (e.g., \\\"Page 1 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"of\"), \" 20\\\").\"), mdx(\"p\", null, \"The default is:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"{\\n  previous: 'Previous',\\n  next: 'Next',\\n  page: 'Page',\\n  currentPage: 'Current Page',\\n  pageOfCount: 'of',\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies any class name(s) for the `Pagination` component. The default is an empty string.","doclets":[],"description":{"id":"3503ee5b-31c4-5cce-8c92-e32734aee2e3","text":"Specifies any class name(s) for the `Pagination` component. The default is an empty string.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies any class name(s) for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pagination\"), \" component. The default is an empty string.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"1"},"name":"currentPage","type":{"name":"number","raw":null,"value":null},"required":false,"docblock":"specifies the page that the `Pagination` component will automatically select. The default is `1`.","doclets":[],"description":{"id":"44892115-f609-534f-b23d-da09c0a9883c","text":"specifies the page that the `Pagination` component will automatically select. The default is `1`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"specifies the page that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pagination\"), \" component will automatically select. The default is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"7"},"name":"maxPagesDisplayed","type":{"name":"custom","raw":"between({ gt: 4 })","value":null},"required":false,"docblock":"Specifies the number of page buttons to display in between the `Previous`\nand `Next` buttons. This number also includes any ellipses in the total count.\nAlso, to ensure that at least one clickable page button is shown when both ellipses\nare displayed, this value must be greater than `4`. The default is `7`.","doclets":[],"description":{"id":"1afb047a-d9f9-5ef0-a856-bcb657e2d0e8","text":"Specifies the number of page buttons to display in between the `Previous`\nand `Next` buttons. This number also includes any ellipses in the total count.\nAlso, to ensure that at least one clickable page button is shown when both ellipses\nare displayed, this value must be greater than `4`. The default is `7`.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the number of page buttons to display in between the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Previous\"), \"\\nand \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Next\"), \" buttons. This number also includes any ellipses in the total count.\\nAlso, to ensure that at least one clickable page button is shown when both ellipses\\nare displayed, this value must be greater than \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"4\"), \". The default is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"7\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{\n  leftIcon: <Icon className=\"fa fa-chevron-left mr-2\" />,\n  rightIcon: <Icon className=\"fa fa-chevron-right ml-2\" />,\n}"},"name":"icons","type":{"name":"shape","raw":null,"value":{"leftIcon":{"name":"node","required":false},"rightIcon":{"name":"node","required":false}}},"required":false,"docblock":"Specifies icons used to indicate previous and next page. Can be an element,\nstring, symbol, etc. Default is chevrons rendered using fa-css.","doclets":[],"description":{"id":"17440394-ecb4-56dd-b382-131ae3f28a0e","text":"Specifies icons used to indicate previous and next page. Can be an element,\nstring, symbol, etc. Default is chevrons rendered using fa-css.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies icons used to indicate previous and next page. Can be an element,\\nstring, symbol, etc. Default is chevrons rendered using fa-css.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"c0992aa3-2bd5-5402-951b-a21e63bbecf1","components":["Pagination"],"cssVariables":"\n// Pagination\n\n$pagination-padding-y:              .5rem !default;\n$pagination-padding-x:              .75rem !default;\n$pagination-padding-y-sm:           .25rem !default;\n$pagination-padding-x-sm:           .5rem !default;\n$pagination-padding-y-lg:           .75rem !default;\n$pagination-padding-x-lg:           1.5rem !default;\n$pagination-line-height:            1.25 !default;\n\n$pagination-color:                  $link-color !default;\n$pagination-bg:                     $white !default;\n$pagination-border-width:           $border-width !default;\n$pagination-border-color:           theme-color(\"gray\", \"border\") !default;\n\n$pagination-focus-box-shadow:       $input-btn-focus-box-shadow !default;\n$pagination-focus-outline:          0 !default;\n\n$pagination-hover-color:            $link-hover-color !default;\n$pagination-hover-bg:               theme-color(\"gray\", \"background\") !default;\n$pagination-hover-border-color:     theme-color(\"gray\", \"border\") !default;\n\n$pagination-active-color:           $component-active-color !default;\n$pagination-active-bg:              $component-active-bg !default;\n$pagination-active-border-color:    $pagination-active-bg !default;\n\n$pagination-disabled-color:         theme-color(\"gray\", \"light-text\") !default;\n$pagination-disabled-bg:            $white !default;\n$pagination-disabled-border-color:  theme-color(\"gray\", \"disabled-border\") !default;\n\n$pagination-border-radius-sm:       $border-radius-sm !default;\n$pagination-border-radius-lg:       $border-radius-lg !default;\n"}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}