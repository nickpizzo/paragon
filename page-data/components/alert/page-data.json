{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/alert/",
    "result": {"data":{"mdx":{"id":"a499cf8f-0447-572d-89f6-0d8948e43b56","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Alert\",\n  \"type\": \"component\",\n  \"components\": [\"Alert\", \"AlertHeading\", \"AlertLink\"],\n  \"categories\": [\"Status & metadata\"],\n  \"status\": \"Stable\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Alert\"), \" component displays a short, important message in a way that attracts the user's attention.\\nAlerts offer four severity levels that set a distinctive icon and color:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Info\"), \": used to convey general information or actions that aren't critical, note that info variant should not contain any icons in it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Warning\"), \": used to display information that needs attention\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Success\"), \": used for success messages\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Danger\"), \": used to communicate problems that have to be resolved immediately\")), mdx(\"p\", null, \"This component utilizes and extends the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Alert\"), \" component from react-bootstrap.\", mdx(\"br\", null), \" \", mdx(\"a\", {\n    href: \"https://react-bootstrap.github.io/components/alerts/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \" See React-Bootstrap for additional documentation.\")), mdx(\"h3\", {\n    \"id\": \"basic-usage\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Basic Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<>\\n<Alert variant=\\\"success\\\">\\n  This is a \\\"success\\\" alert with{' '}\\n  <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n  like.\\n</Alert>\\n<Alert variant=\\\"info\\\">\\n  This is a \\\"info\\\" alert with{' '}\\n  <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n  like.\\n</Alert>\\n<Alert variant=\\\"danger\\\">\\n  This is a \\\"danger\\\" alert with{' '}\\n  <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n  like.\\n</Alert>\\n<Alert variant=\\\"warning\\\">\\n  This is a \\\"warning\\\" alert with{' '}\\n  <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n  like.\\n</Alert>\\n</>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-action-buttons\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-action-buttons\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With Action Buttons\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Alert\"), \" component supports a dismissible button and a custom call-to-action button, via the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dismissible\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"button\"), \" props respectively. The buttons may be right aligned or stacked. On extra small screen widths, the buttons will be stacked.\"), mdx(\"p\", null, \"The stacked variant should be used for:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Placement in sidebars or small container\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extra-small breakpoint and below\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<>\\n  <Alert\\n    variant=\\\"info\\\"\\n    actions={[\\n      <Button>Hello</Button>,\\n    ]}\\n    dismissible\\n    closeLabel=\\\"Dismiss\\\"\\n    onClose={(e) => { console.log('closed', e); } }\\n  >\\n    This is a \\\"info\\\" alert with{' '}\\n    <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n    like.\\n  </Alert>\\n  <Alert variant=\\\"warning\\\" dismissible>\\n    This is a \\\"info\\\" alert with{' '}\\n    <Alert.Link href=\\\"#\\\">an example link</Alert.Link>. Give it a click if you\\n    like.\\n  </Alert>\\n  <Alert\\n    variant=\\\"success\\\"\\n    icon={CheckCircle}\\n    dismissible\\n    actions={[\\n      <Button>Hello</Button>,\\n    ]}\\n  >\\n    <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n    <p>\\n      Aww yeah, you successfully read this important alert message. This example\\n      text is going to run a bit longer so that you can see how spacing within an\\n      alert works with this kind of content.\\n    </p>\\n  </Alert>\\n  <Alert\\n    variant=\\\"danger\\\"\\n    icon={Info}\\n    actions={[\\n      <Button>Hello</Button>,\\n    ]}\\n    dismissible\\n    onClose={(e) => { console.log('closed', e); } }\\n    stacked\\n  >\\n    <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n    <p>\\n      Aww yeah, you successfully read this important alert message. This example\\n      text is going to run a bit longer so that you can see how spacing within an\\n      alert works with this kind of content.\\n    </p>\\n  </Alert>\\n</>\\n\")), mdx(\"h3\", {\n    \"id\": \"variants\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#variants\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Variants\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<>\\n<Alert variant=\\\"success\\\" dismissible icon={CheckCircle}>\\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n  <p>\\n    Aww yeah, you successfully read this important alert message. This example\\n    text is going to run a bit longer so that you can see how spacing within an\\n    alert works with this kind of content.\\n  </p>\\n</Alert>\\n<Alert variant=\\\"warning\\\" dismissible icon={WarningFilled}>\\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n  <p>\\n    Aww yeah, you successfully read this important alert message. This example\\n    text is going to run a bit longer so that you can see how spacing within an\\n    alert works with this kind of content.\\n  </p>\\n</Alert>\\n<Alert variant=\\\"danger\\\" dismissible icon={Info}>\\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n  <p>\\n    Aww yeah, you successfully read this important alert message. This example\\n    text is going to run a bit longer so that you can see how spacing within an\\n    alert works with this kind of content.\\n  </p>\\n</Alert>\\n</>\\n\")), mdx(\"h3\", {\n    \"id\": \"kitchen-sink\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#kitchen-sink\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Kitchen Sink\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Alert\\n  variant=\\\"success\\\"\\n  actions={[\\n    <Button>Hello</Button>\\n  ]}\\n  dismissible\\n  stacked\\n>\\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\\n  <p>\\n    Aww yeah, you successfully read this important alert message. This example\\n    text is going to run a bit longer so that you can see how spacing within an\\n    alert works with this kind of content.\\n  </p>\\n  <hr />\\n  <p className=\\\"mb-0\\\">\\n    Whenever you need to, be sure to use margin utilities to keep things nice\\n    and tidy.\\n  </p>\\n</Alert>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Alert","status":"Stable","notes":"","components":["Alert","AlertHeading","AlertLink"]}},"components":{"nodes":[{"displayName":"Alert","props":[{"defaultValue":{"value":"undefined"},"name":"children","type":{"name":"node","raw":null,"value":null},"required":false,"docblock":"Docstring for the children prop","doclets":[],"description":{"id":"4eb4cbba-7cea-5197-a8b1-13d565f75d6d","text":"Docstring for the children prop","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Docstring for the children prop\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"icon","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Docstring for the icon prop... Icon that will be shown in the alert","doclets":[],"description":{"id":"f6705109-c5b7-5ff3-b0c6-610e0e04b0b0","text":"Docstring for the icon prop... Icon that will be shown in the alert","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Docstring for the icon prop... Icon that will be shown in the alert\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"true"},"name":"show","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Whether the alert is shown.","doclets":[],"description":{"id":"d28ce15b-502c-5dbd-acde-afaf584f4006","text":"Whether the alert is shown.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Whether the alert is shown.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"dismissible","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Whether the alert is dismissible. Defaults to true.","doclets":[],"description":{"id":"81bd8d92-818f-5199-8bc9-2b384b598f4e","text":"Whether the alert is dismissible. Defaults to true.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Whether the alert is dismissible. Defaults to true.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"() => {}"},"name":"onClose","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Optional callback function for when the alert it dismissed.","doclets":[],"description":{"id":"0c89c50d-e9e5-501f-aef1-1f58c58b349f","text":"Optional callback function for when the alert it dismissed.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Optional callback function for when the alert it dismissed.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"actions","type":{"name":"arrayOf","raw":null,"value":{"name":"element"}},"required":false,"docblock":"Optional list of action elements. May include, at most, 2 actions, or 1 if dismissible is true.","doclets":[],"description":{"id":"ddaa6c1c-a355-5318-a1b2-d1f2240592bd","text":"Optional list of action elements. May include, at most, 2 actions, or 1 if dismissible is true.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Optional list of action elements. May include, at most, 2 actions, or 1 if dismissible is true.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"stacked","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Position of the dismiss and call-to-action buttons. Defaults to ``false``.","doclets":[],"description":{"id":"ef20e50f-9b04-5101-b4ed-e026eb56beb6","text":"Position of the dismiss and call-to-action buttons. Defaults to ``false``.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Position of the dismiss and call-to-action buttons. Defaults to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'Dismiss'"},"name":"closeLabel","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Sets the text for alert close button.","doclets":[],"description":{"id":"ba67aaff-d367-59ec-b596-54661748783e","text":"Sets the text for alert close button.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Sets the text for alert close button.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"AlertHeading","props":[{"defaultValue":{"value":"divWithClassName('h4')"},"name":"as","type":{"name":"elementType","raw":null,"value":null},"required":false,"docblock":"Specifies the base element","doclets":[],"description":{"id":"9923c361-85ed-5bb1-9178-85980bfae1f8","text":"Specifies the base element","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the base element\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'alert-heading'"},"name":"bsPrefix","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Overrides underlying component base CSS class name","doclets":[],"description":{"id":"6bb9f11c-faa6-5a98-9efd-a337d4921c0c","text":"Overrides underlying component base CSS class name","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Overrides underlying component base CSS class name\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"AlertLink","props":[{"defaultValue":{"value":"'a'"},"name":"as","type":{"name":"elementType","raw":null,"value":null},"required":false,"docblock":"Specifies the base element","doclets":[],"description":{"id":"c9af29ec-a3c5-5844-ac48-66d264a0b83a","text":"Specifies the base element","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies the base element\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'alert-link'"},"name":"bsPrefix","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Overrides underlying component base CSS class name","doclets":[],"description":{"id":"042adda3-4185-5013-97ad-44f4e600f0a8","text":"Overrides underlying component base CSS class name","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Overrides underlying component base CSS class name\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"a499cf8f-0447-572d-89f6-0d8948e43b56","components":["Alert","AlertHeading","AlertLink"],"cssVariables":"\n\n// Alerts\n//\n// Define alert colors, border radius, and padding.\n\n$alert-padding-y:                   1.5rem !default;\n$alert-padding-x:                   1.5rem !default;\n$alert-margin-bottom:               1rem !default;\n$alert-border-radius:               $border-radius !default;\n$alert-link-font-weight:            $font-weight-normal !default;\n$alert-border-width:                0 !default;\n$alert-title-color:                 #000000 !default;\n$alert-box-shadow:                  0px 1px 2px rgba(0, 0, 0, 0.15), 0px 1px 4px rgba(0, 0, 0, 0.15) !default;\n\n$alert-bg-level:                    -10 !default;\n$alert-border-level:                -9 !default;\n$alert-color-level:                 6 !default;\n\n$alert-icon-space:                  .8rem !default;\n\n$alert-font-size:                   .875rem !default;\n$alert-line-height:                 1.5rem !default;\n$alert-content-color:               $gray-700 !default;\n\n$alert-actions-gap:                 map-get($spacers, 3);\n"}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}