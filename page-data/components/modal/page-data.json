{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/modal/",
    "result": {"data":{"mdx":{"id":"32aafcc1-046c-5067-ac65-172316a95bf6","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Modal\",\n  \"type\": \"component\",\n  \"components\": [\"Modal\"],\n  \"categories\": [\"Overlays\"],\n  \"status\": \"Deprecate soon\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"To Do\",\n  \"notes\": \"Replaced by ModalDialog.\\n\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"example-usage\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#example-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Example Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"class ModalWrapper extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.openModal = this.openModal.bind(this);\\n    this.resetModalWrapperState = this.resetModalWrapperState.bind(this);\\n\\n    this.state = { open: false };\\n  }\\n\\n  openModal() {\\n    this.setState({ open: true });\\n  }\\n\\n  resetModalWrapperState() {\\n    this.setState({ open: false });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Modal\\n          open={this.state.open}\\n          title=\\\"Modal title.\\\"\\n          body={\\n            <div>\\n              <p>Enter your e-mail address to receive free cat facts!</p>\\n              <InputText\\n                name=\\\"e-mail\\\"\\n                label=\\\"E-Mail Address\\\"\\n              />\\n            </div>\\n          }\\n          parentSelector={this.props.parentSelector}\\n          onClose={this.resetModalWrapperState}\\n          buttons={[\\n            <Button variant=\\\"success\\\" data-autofocus>Green button!</Button>\\n          ]}\\n        />\\n        <Button\\n          onClick={this.openModal}\\n          variant=\\\"light\\\"\\n        >\\n          Click me to open a modal!\\n        </Button>\\n      </div>\\n    );\\n  }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"configurable-buttons\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#configurable-buttons\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"configurable buttons\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Modal\\n  open\\n  title=\\\"Modal title.\\\"\\n  body=\\\"Modal body.\\\"\\n  buttons={[\\n    <Button variant=\\\"primary\\\">Blue button!</Button>,\\n    {\\n      label: 'Red button!',\\n      buttonType: 'danger',\\n    },\\n    <Button variant=\\\"success\\\">Green button!</Button>,\\n  ]}\\n  onClose={() => {}}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"configurable-title-and-body\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#configurable-title-and-body\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"configurable title and body\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Modal\\n  open\\n  title=\\\"Custom title!\\\"\\n  body=\\\"Custom body!\\\"\\n  buttons={[\\n    <Button variant=\\\"dark\\\">Dark button!</Button>\\n  ]}\\n  onClose={() => {}}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"configurable-buttons-that-perform-actions\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#configurable-buttons-that-perform-actions\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"configurable buttons that perform actions\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Modal\\n  open\\n  title=\\\"Modal title.\\\"\\n  body=\\\"Modal body.\\\"\\n  buttons={[\\n    <Button\\n      variant=\\\"light\\\"\\n      onClick={action('button-click')}\\n    >\\n      Click me and check the console!\\n    </Button>,\\n  ]}\\n  onClose={() => {}}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"configurable-close-button-string\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#configurable-close-button-string\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"configurable close button string\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Modal\\n  open\\n  title=\\\"Modal title.\\\"\\n  body=\\\"Modal body.\\\"\\n  closeText=\\\"SHOO!\\\"\\n  onClose={() => {}}\\n/>\\n\")), mdx(\"h3\", {\n    \"id\": \"configurable-close-button-element\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#configurable-close-button-element\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"configurable close button element\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<Modal\\n  open\\n  title=\\\"Modal title.\\\"\\n  body=\\\"Modal body.\\\"\\n  closeText={\\n    <Icon\\n      className=\\\"fa fa-ship\\\"\\n      screenReaderText=\\\"Close\\\"\\n    />\\n  }\\n  onClose={() => {}}\\n/>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Modal","status":"Deprecate soon","notes":"Replaced by ModalDialog.\n","components":["Modal"]}},"components":{"nodes":[{"displayName":"Modal","props":[{"defaultValue":{"value":"false"},"name":"open","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"specifies whether the modal renders open or closed on the initial render. It defaults to false.","doclets":[],"description":{"id":"683dd4f4-de12-5402-95eb-f819d49f80d1","text":"specifies whether the modal renders open or closed on the initial render. It defaults to false.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"specifies whether the modal renders open or closed on the initial render. It defaults to false.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'body'"},"name":"parentSelector","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"is the selector for an element in the dom which the modal should be rendered under. It uses querySelector to find the first element that matches that selector, and then creates a react portal to a div underneath the parent element.","doclets":[],"description":{"id":"04e6a5ed-6315-5218-8489-fb7e49b7953f","text":"is the selector for an element in the dom which the modal should be rendered under. It uses querySelector to find the first element that matches that selector, and then creates a react portal to a div underneath the parent element.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"is the selector for an element in the dom which the modal should be rendered under. It uses querySelector to find the first element that matches that selector, and then creates a react portal to a div underneath the parent element.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"title","type":{"name":"union","raw":null,"value":[{"name":"string"},{"name":"element"}]},"required":true,"docblock":"a string or an element that is rendered inside of the modal title, above the modal body.","doclets":[],"description":{"id":"1ce4ed59-a853-5d6b-885a-ae4a484a1c65","text":"a string or an element that is rendered inside of the modal title, above the modal body.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"a string or an element that is rendered inside of the modal title, above the modal body.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"body","type":{"name":"union","raw":null,"value":[{"name":"string"},{"name":"element"}]},"required":true,"docblock":"a string or an element that is rendered inside of the modal body, between the title and the footer.","doclets":[],"description":{"id":"3256292b-92c2-5cb7-83dd-f4a7cf215d22","text":"a string or an element that is rendered inside of the modal body, between the title and the footer.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"a string or an element that is rendered inside of the modal body, between the title and the footer.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"[]"},"name":"buttons","type":{"name":"arrayOf","raw":null,"value":{"name":"union","value":[{"name":"element"},{"name":"object"}]}},"required":false,"docblock":"an array of either elements or shapes that take the form of the buttonPropTypes. See the [buttonPropTypes](https://github.com/edx/paragon/blob/master/src/Button/index.jsx#L40) for a list of acceptable props to pass as part of a button.","doclets":[],"description":{"id":"74611960-1dfd-58ae-94ab-514c593353d7","text":"an array of either elements or shapes that take the form of the buttonPropTypes. See the [buttonPropTypes](https://github.com/edx/paragon/blob/master/src/Button/index.jsx#L40) for a list of acceptable props to pass as part of a button.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"an array of either elements or shapes that take the form of the buttonPropTypes. See the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/edx/paragon/blob/master/src/Button/index.jsx#L40\"\n  }, \"buttonPropTypes\"), \" for a list of acceptable props to pass as part of a button.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'Close'"},"name":"closeText","type":{"name":"union","raw":null,"value":[{"name":"string"},{"name":"element"}]},"required":false,"docblock":"specifies the display text of the default Close button. It defaults to \"Close\".","doclets":[],"description":{"id":"879578ab-5248-5cb0-9536-1731ace1b677","text":"specifies the display text of the default Close button. It defaults to \"Close\".","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"specifies the display text of the default Close button. It defaults to \\\"Close\\\".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"onClose","type":{"name":"func","raw":null,"value":null},"required":true,"docblock":"a function that is called on close. It can be used to perform actions upon closing of the modal, such as restoring focus to the previous logical focusable element.","doclets":[],"description":{"id":"6371dd0d-9c58-5344-b0e9-ed6b9afb8a36","text":"a function that is called on close. It can be used to perform actions upon closing of the modal, such as restoring focus to the previous logical focusable element.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"a function that is called on close. It can be used to perform actions upon closing of the modal, such as restoring focus to the previous logical focusable element.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{}"},"name":"variant","type":{"name":"shape","raw":null,"value":{"status":{"name":"string","required":false}}},"required":false,"docblock":"","doclets":[],"description":{"id":"ee9e30fc-70f9-5805-b171-4925cd5afac5","text":"","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"true"},"name":"renderDefaultCloseButton","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"specifies whether the default close button is rendered in the footer. It defaults to true.","doclets":[],"description":{"id":"f85effed-702c-5c03-92f6-d98856fa5178","text":"specifies whether the default close button is rendered in the footer. It defaults to true.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"specifies whether the default close button is rendered in the footer. It defaults to true.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"true"},"name":"renderHeaderCloseButton","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"specifies whether a close button is rendered in the modal header. It defaults to true.","doclets":[],"description":{"id":"86212814-5519-592c-8953-4d7238aa06d9","text":"specifies whether a close button is rendered in the modal header. It defaults to true.","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"specifies whether a close button is rendered in the modal header. It defaults to true.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"dialogClassName","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies optional classes to add to the element with the '.modal-dialog' class.  See Bootstrap documentation for possible classes.  Some options: modal-lg, modal-sm, modal-dialog-centered","doclets":[],"description":{"id":"79baaa99-b8d6-52c7-a535-ba99cb9beef5","text":"Specifies optional classes to add to the element with the '.modal-dialog' class.  See Bootstrap documentation for possible classes.  Some options: modal-lg, modal-sm, modal-dialog-centered","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Specifies optional classes to add to the element with the '.modal-dialog' class.  See Bootstrap documentation for possible classes.  Some options: modal-lg, modal-sm, modal-dialog-centered\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"32aafcc1-046c-5067-ac65-172316a95bf6","components":["Modal"],"cssVariables":"\n// Modals\n\n// Padding applied to the modal body\n$modal-inner-padding:               1.5rem !default;\n\n// Margin between elements in footer, must be lower than or equal to 2 * $modal-inner-padding\n$modal-footer-margin-between:       .5rem !default;\n\n$modal-dialog-margin:               1.5rem !default;\n$modal-dialog-margin-y-sm-up:       1.75rem !default;\n\n$modal-title-line-height:           $line-height-base !default;\n\n$modal-content-color:               null !default;\n$modal-content-bg:                  $white !default;\n$modal-content-border-color:        rgba($black, .2) !default;\n$modal-content-border-width:        0 !default;\n$modal-content-border-radius:       $border-radius-lg !default;\n$modal-content-inner-border-radius: subtract($modal-content-border-radius, $modal-content-border-width) !default;\n$modal-content-box-shadow-xs:       0 .25rem .5rem rgba($black, .5) !default;\n$modal-content-box-shadow-sm-up:    0px 10px 20px rgba($black, 0.15), 0px 8px 20px rgba($black, 0.15) !default;\n\n$modal-backdrop-bg:                 $black !default;\n$modal-backdrop-opacity:            .5 !default;\n$modal-header-border-color:         $border-color !default;\n$modal-footer-border-color:         $modal-header-border-color !default;\n$modal-header-border-width:         $modal-content-border-width !default;\n$modal-footer-border-width:         $modal-header-border-width !default;\n$modal-header-padding-y:            1rem !default;\n$modal-header-padding-x:            1.5rem !default;\n$modal-header-padding:              $modal-header-padding-y $modal-header-padding-x !default; // Keep this for backwards compatibility\n$modal-footer-padding-y:            1rem !default;\n$modal-footer-padding-x:            1.5rem !default;\n$modal-footer-padding:              $modal-footer-padding-y $modal-footer-padding-x !default; // Keep this for backwards compatibility\n\n$modal-xl:                          1140px !default;\n$modal-lg:                          800px !default;\n$modal-md:                          500px !default;\n$modal-sm:                          400px !default;\n\n$modal-fade-transform:              translate(0, -50px) !default;\n$modal-show-transform:              none !default;\n$modal-transition:                  transform .3s ease-out !default;\n$modal-scale-transform:             scale(1.02) !default;\n"}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}