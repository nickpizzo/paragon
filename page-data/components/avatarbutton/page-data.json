{
    "componentChunkName": "component---src-templates-component-page-template-jsx",
    "path": "/components/avatarbutton/",
    "result": {"data":{"mdx":{"id":"a936d115-9b28-506a-b245-451a044de64e","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"AvatarButton\",\n  \"components\": [\"AvatarButton\"],\n  \"categories\": [\"Buttonlike\"],\n  \"type\": \"component\",\n  \"status\": \"New\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A button that contains the user\\u2019s Avatar.\"), mdx(\"h3\", {\n    \"id\": \"basic-usage\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"Basic Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<>\\n  <div>\\n    <AvatarButton size=\\\"lg\\\" src=\\\"https://source.unsplash.com/128x128/?dog,portrait\\\">Casey</AvatarButton>\\n  </div>\\n  <div>\\n    <AvatarButton size=\\\"md\\\" src=\\\"https://source.unsplash.com/128x128/?dog,portrait\\\">Casey</AvatarButton>\\n  </div>\\n  <div>\\n    <AvatarButton size=\\\"sm\\\" src=\\\"https://source.unsplash.com/128x128/?dog,portrait\\\">Casey</AvatarButton>\\n  </div>\\n</>\\n\")), mdx(\"h3\", {\n    \"id\": \"with-dropdown\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#with-dropdown\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"With Dropdown\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Dropdown>\\n  <Dropdown.Toggle as={AvatarButton} src=\\\"https://source.unsplash.com/128x128/?dog,portrait\\\">\\n    Casey\\n  </Dropdown.Toggle>\\n\\n  <Dropdown.Menu alignRight>\\n    <Dropdown.Item href=\\\"#/action-1\\\">Resume your last course</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-2\\\">Dashboard</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-3\\\">Profile</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-3\\\">Account</Dropdown.Item>\\n    <Dropdown.Divider />\\n    <Dropdown.Item href=\\\"#/action-3\\\">Sign out</Dropdown.Item>\\n  </Dropdown.Menu>\\n</Dropdown>\\n\")), mdx(\"p\", null, \"Props set on Dropdown.Toggle get passed through to the \\\"as\\\" component\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<Dropdown>\\n  <Dropdown.Toggle as={AvatarButton} size=\\\"sm\\\" src=\\\"https://source.unsplash.com/128x128/?dog,portrait\\\">\\n    Casey\\n  </Dropdown.Toggle>\\n\\n  <Dropdown.Menu alignRight>\\n    <Dropdown.Item href=\\\"#/action-1\\\">Resume your last course</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-2\\\">Dashboard</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-3\\\">Profile</Dropdown.Item>\\n    <Dropdown.Item href=\\\"#/action-3\\\">Account</Dropdown.Item>\\n    <Dropdown.Divider />\\n    <Dropdown.Item href=\\\"#/action-3\\\">Sign out</Dropdown.Item>\\n  </Dropdown.Menu>\\n</Dropdown>\\n\")), mdx(\"h3\", {\n    \"id\": \"no-label\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#no-label\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"heading-icon-link\"\n  })), \"No label\"), mdx(\"p\", null, \"For use in mobile viewports or constrained views.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, \"<>\\n  <div>\\n    <AvatarButton showLabel={false} size=\\\"lg\\\" src=\\\"https://source.unsplash.com/128x128/?dog,portrait\\\">Casey</AvatarButton>\\n  </div>\\n  <div>\\n    <AvatarButton showLabel={false} size=\\\"md\\\" src=\\\"https://source.unsplash.com/128x128/?dog,portrait\\\">Casey</AvatarButton>\\n  </div>\\n  <div>\\n    <AvatarButton showLabel={false} size=\\\"sm\\\" src=\\\"https://source.unsplash.com/128x128/?dog,portrait\\\">Casey</AvatarButton>\\n  </div>\\n\\n  <Dropdown>\\n    <Dropdown.Toggle  showLabel={false} as={AvatarButton} src=\\\"https://source.unsplash.com/128x128/?dog,portrait\\\">\\n      Casey\\n    </Dropdown.Toggle>\\n\\n    <Dropdown.Menu alignRight>\\n      <Dropdown.Item href=\\\"#/action-1\\\">Resume your last course</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#/action-2\\\">Dashboard</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#/action-3\\\">Profile</Dropdown.Item>\\n      <Dropdown.Item href=\\\"#/action-3\\\">Account</Dropdown.Item>\\n      <Dropdown.Divider />\\n      <Dropdown.Item href=\\\"#/action-3\\\">Sign out</Dropdown.Item>\\n    </Dropdown.Menu>\\n  </Dropdown>\\n</>\\n\")), mdx(\"p\", null, \"CSS overrides can be applied to this component through the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".btn-avatar\"), \" class name.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"AvatarButton","status":"New","notes":"","components":["AvatarButton"]}},"components":{"nodes":[{"displayName":"AvatarButton","props":[{"defaultValue":{"value":"undefined"},"name":"children","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"The button text","doclets":[],"description":{"id":"915314be-a3bd-51d2-9223-391656d06c18","text":"The button text","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The button text\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"A class name to append to the button","doclets":[],"description":{"id":"2d6407c2-3500-52c1-886a-4d835a56d867","text":"A class name to append to the button","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A class name to append to the button\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"true"},"name":"showLabel","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Show the label or only the avatar","doclets":[],"description":{"id":"6384f2e5-5661-5a3e-8e48-332f4ad92769","text":"Show the label or only the avatar","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Show the label or only the avatar\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'md'"},"name":"size","type":{"name":"enum","raw":null,"value":[{"value":"'sm'","computed":false},{"value":"'md'","computed":false},{"value":"'lg'","computed":false}]},"required":false,"docblock":"The button size","doclets":[],"description":{"id":"5a4d5eda-72ea-5469-94af-cbfb3b0e341f","text":"The button size","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The button size\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"src","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Image src of the avatar image","doclets":[],"description":{"id":"f06550ee-ca7c-5753-ae4e-59e6cd8055e3","text":"Image src of the avatar image","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Image src of the avatar image\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'tertiary'"},"name":"variant","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"The button style variant to use","doclets":[],"description":{"id":"9c22a842-3d6d-557d-be64-35ec4a65b2eb","text":"The button style variant to use","childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The button style variant to use\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"a936d115-9b28-506a-b245-451a044de64e","components":["AvatarButton"],"cssVariables":"$avatar-button-padding-left: 0.25em !default;\n$avatar-button-padding-left-sm: 0.25em !default;\n$avatar-button-padding-left-lg: 0.25em !default;\n"}},
    "staticQueryHashes": ["1303225137","3649515864","63159454"]}