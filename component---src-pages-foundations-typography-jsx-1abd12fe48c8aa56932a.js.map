{"version":3,"file":"component---src-pages-foundations-typography-jsx-1abd12fe48c8aa56932a.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/components/MeasuredItem.jsx","webpack://paragon-pattern-library-documentation/./src/pages/foundations/typography.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class MeasuredItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const initialMeasurements = props.properties.reduce((acc, property) => {\n      acc[property] = null;\n      return acc;\n    }, {});\n\n    this.state = initialMeasurements;\n    this.item = React.createRef();\n  }\n\n  componentDidMount() {\n    // Needs a moment to render children to DOM first.\n    setTimeout(this.measure.bind(this), 10);\n  }\n\n  measure() {\n    const computedStyle = getComputedStyle(this.item.current);\n    const measurements = this.props.properties.reduce((acc, property) => {\n      acc[property] = computedStyle.getPropertyValue(property);\n      return acc;\n    }, {});\n\n    this.setState(measurements);\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.renderBefore ? this.props.renderBefore(this.state) : null}\n        {React.cloneElement(this.props.children, { ref: this.item })}\n        {this.props.renderAfter ? this.props.renderAfter(this.state) : null}\n      </>\n    );\n  }\n}\n\nMeasuredItem.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.string),\n  renderBefore: PropTypes.func,\n  renderAfter: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nMeasuredItem.defaultProps = {\n  properties: [],\n  renderBefore: undefined,\n  renderAfter: undefined,\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Container } from '~paragon-react'; // eslint-disable-line\nimport SEO from '../../components/SEO';\nimport MeasuredItem from '../../components/MeasuredItem';\nimport Layout from '../../components/PageLayout';\n\nconst weightLabels = {\n  200: 'Light',\n  300: 'Light',\n  400: 'Regular',\n  500: 'Medium',\n  600: 'Medium',\n  700: 'Bold',\n  800: 'Black',\n};\n\nconst measuredTypeProps = {\n  properties: ['font-size', 'line-height', 'font-family', 'font-weight'],\n  renderAfter: measurements => {\n    const fontFamily = measurements['font-family']\n      ? measurements['font-family'].split(',')[0]\n      : null;\n    const weight = weightLabels[measurements['font-weight']];\n    // only one significant digit if needed\n    const fontSize = Math.round(Number.parseFloat(measurements['font-size']) * 10) / 10;\n    const lineHeight = Math.round(Number.parseFloat(measurements['line-height']) * 10) / 10;\n\n    return (\n      <p className=\"m-0 text-muted\">\n        <span className=\"mr-2\">\n          {fontFamily} {weight}\n        </span>\n        {fontSize}px / {lineHeight}px\n      </p>\n    );\n  },\n};\n\nexport default function TypographyPage() {\n  return (\n    <Layout>\n      <Container size=\"xl\" className=\"py-5\">\n        <SEO title=\"Typography\" />\n\n        <h1>Typography</h1>\n\n        <table className=\"w-100 table pgn-doc__status-table\">\n          <tbody>\n            <tr>\n              <th colSpan=\"3\">\n                <h2 className=\"mt-3\">Headings</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Desktop</th>\n              <th>Mobile</th>\n              <th>CSS Class</th>\n            </tr>\n            {[1, 2, 3, 4, 5, 6].map(headingSize => (\n              <tr>\n                <td>\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 h${headingSize}`}>\n                      Heading {headingSize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td className=\"mobile-type\">\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 h${headingSize}`}>\n                      Heading {headingSize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td>\n                  <code>.h{headingSize}</code>\n                </td>\n              </tr>\n            ))}\n            <tr>\n              <td colSpan=\"2\">\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"heading-label\">Heading Label</p>\n                </MeasuredItem>\n                A heading label is usually paired with and proceeds a Heading.\n              </td>\n              <td>\n                <code>.heading-label</code>\n              </td>\n            </tr>\n          </tbody>\n          <tbody>\n            <tr>\n              <th colSpan=\"3\">\n                <h2 className=\"mt-3\">Body</h2>\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"2\">Desktop & Mobile</th>\n              <th>CSS Class</th>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"lead m-0\">Large Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.lead</code>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"m-0\">Body</p>\n                </MeasuredItem>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"small m-0\">Small Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.small</code>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"x-small m-0\">Extra Small Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.x-small</code>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"micro m-0\">Micro Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.micro</code>\n              </td>\n            </tr>\n          </tbody>\n          <tbody>\n            <tr>\n              <th colSpan=\"3\">\n                <h2 className=\"mt-3\">Display</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Desktop</th>\n              <th>Mobile</th>\n              <th>CSS Class</th>\n            </tr>\n            {[1, 2, 3, 4].map(displaySize => (\n              <tr>\n                <td>\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 display-${displaySize}`}>\n                      Display {displaySize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td className=\"mobile-type\">\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 display-${displaySize}`}>\n                      Display {displaySize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td>\n                  <code>.display-{displaySize}</code>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n          <tbody>\n            <tr>\n              <th colSpan=\"3\">\n                <h2 className=\"mt-3\">Links</h2>\n              </th>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">\n                <a href=\"#\">Standalone Link</a>\n              </td>\n              <td>\n                <small>\n                  The default style for <code>a</code> tags that don&apos;t appear in\n                  a <code>p</code> tag.\n                </small>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">\n                <p>\n                  An{' '}\n                  <a className=\"inline-link\" href=\"#\">\n                    inline link\n                  </a>{' '}\n                  in a sentence.\n                </p>\n              </td>\n              <td>\n                <small>\n                  For links inside a <code>p</code> or with the{' '}\n                  <code>.inline-link</code> class name.\n                </small>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">\n                <a className=\"muted-link\" href=\"#\">\n                  Muted, Standalone Link\n                </a>\n              </td>\n              <td>\n                <small>\n                  <code>.muted-link</code> not in a <code>p</code> tag.\n                </small>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">\n                <p>\n                  An{' '}\n                  <a className=\"muted-link inline-link\" href=\"#\">\n                    muted, inline link\n                  </a>{' '}\n                  in a sentence.\n                </p>\n              </td>\n              <td>\n                <small>\n                  For <code>.muted-link</code> links inside a <code>p</code> or\n                  with the <code>.inline-link</code> class name.\n                </small>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"w-100 table pgn-doc__status-table\">\n          <tbody>\n            <tr>\n              <th colSpan=\"2\">\n                <h2>Decoration and Emphasis</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Style</th>\n              <th>CSS Class</th>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-lowercase\">Lowercase text.</p>\n              </td>\n              <td>\n                <code>.text-lowercase</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-uppercase\">uppercase text.</p>\n              </td>\n              <td>\n                <code>.text-uppercase</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-capitalize\">capitalize text.</p>\n              </td>\n              <td>\n                <code>.text-capitalize</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-decoration-none\">No decorations.</p>\n              </td>\n              <td>\n                <code>.text-decoration-none</code>\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                <p className=\"text-italic\">Italic text.</p>\n              </td>\n              <td>\n                <code>.text-italic</code>\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                <p className=\"font-weight-bold\">Bold text.</p>\n              </td>\n              <td>\n                <code>.font-weight-bold</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"font-weight-normal\">Regular text.</p>\n              </td>\n              <td>\n                <code>.font-weight-normal</code>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"w-100 table pgn-doc__status-table\">\n          <tbody>\n            <tr>\n              <th colSpan=\"2\">\n                <h2>Alignment</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Style</th>\n              <th>CSS Class</th>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-left\">left text.</p>\n              </td>\n              <td>\n                <code>.text-left</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-right\">right text.</p>\n              </td>\n              <td>\n                <code>.text-right</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-center\">center text.</p>\n              </td>\n              <td>\n                <code>.text-center</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-justify\">justify text.</p>\n                <p\n                  className=\"text-justify text-muted small\"\n                  style={{ maxWidth: '20rem' }}\n                >\n                  At the edge of forever tendrils of gossamer clouds corpus\n                  callosum culture Vangelis dispassionate extraterrestrial\n                  observer.\n                </p>\n              </td>\n              <td>\n                <code>.text-justify</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-wrap\">wrap text.</p>\n              </td>\n              <td>\n                <code>.text-wrap</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-nowrap\">nowrap text.</p>\n              </td>\n              <td>\n                <code>.text-nowrap</code>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Container>\n    </Layout>\n  );\n}\n"],"names":["MeasuredItem","props","initialMeasurements","properties","reduce","acc","property","state","item","React","componentDidMount","setTimeout","this","measure","bind","computedStyle","getComputedStyle","current","measurements","getPropertyValue","setState","render","renderBefore","children","ref","renderAfter","defaultProps","undefined","weightLabels","measuredTypeProps","fontFamily","split","weight","fontSize","Math","round","Number","parseFloat","lineHeight","className","TypographyPage","size","title","colSpan","map","headingSize","displaySize","href","style","maxWidth"],"sourceRoot":""}